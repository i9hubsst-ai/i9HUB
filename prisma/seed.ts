import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Iniciando seed do banco de dados...')

  // Limpar dados existentes (opcional - comentar se n√£o quiser limpar)
  console.log('üóëÔ∏è  Limpando dados existentes...')
  await prisma.auditLog.deleteMany()
  await prisma.actionPlan.deleteMany()
  await prisma.assessmentScore.deleteMany()
  await prisma.assessmentAnswer.deleteMany()
  await prisma.assessment.deleteMany()
  await prisma.question.deleteMany()
  await prisma.iMSSTDimension.deleteMany()
  await prisma.modulePermission.deleteMany()
  await prisma.membership.deleteMany()
  await prisma.platformAdmin.deleteMany()
  await prisma.company.deleteMany()

  // 1. Criar empresas
  console.log('üè¢ Criando empresas demo...')
  const empresa1 = await prisma.company.create({
    data: {
      name: 'TechSafety Ind√∫stria Ltda',
      cnpj: '12.345.678/0001-90',
    },
  })

  const empresa2 = await prisma.company.create({
    data: {
      name: 'SafeWork Servi√ßos e Consultoria',
      cnpj: '98.765.432/0001-10',
    },
  })

  console.log('‚úì Empresas criadas')

  // 2. Criar dimens√µes IMSST
  console.log('üìä Criando dimens√µes IMSST...')
  const dimensoes = await Promise.all([
    prisma.iMSSTDimension.create({
      data: {
        name: 'Lideran√ßa e Comprometimento',
        description: 'Avalia o envolvimento da alta dire√ß√£o e lideran√ßa com a SST',
        order: 1,
      },
    }),
    prisma.iMSSTDimension.create({
      data: {
        name: 'Processos e Procedimentos',
        description: 'Avalia a documenta√ß√£o e padroniza√ß√£o dos processos de SST',
        order: 2,
      },
    }),
    prisma.iMSSTDimension.create({
      data: {
        name: 'Conformidade Legal',
        description: 'Avalia o atendimento √†s Normas Regulamentadoras e legisla√ß√£o SST',
        order: 3,
      },
    }),
    prisma.iMSSTDimension.create({
      data: {
        name: 'Capacita√ß√£o e Treinamento',
        description: 'Avalia os programas de treinamento e conscientiza√ß√£o em SST',
        order: 4,
      },
    }),
    prisma.iMSSTDimension.create({
      data: {
        name: 'Dados e Indicadores',
        description: 'Avalia a coleta, an√°lise e uso de dados para melhoria cont√≠nua',
        order: 5,
      },
    }),
  ])

  console.log('‚úì Dimens√µes criadas')

  // 3. Criar perguntas para cada dimens√£o
  console.log('‚ùì Criando perguntas do diagn√≥stico...')
  const perguntasPorDimensao = [
    // Lideran√ßa e Comprometimento
    [
      'A alta dire√ß√£o participa ativamente das reuni√µes e decis√µes relacionadas √† SST?',
      'Existem metas e objetivos claros de SST comunicados a toda a organiza√ß√£o?',
      'A lideran√ßa aloca recursos adequados (financeiros, humanos, tecnol√≥gicos) para SST?',
      'H√° um respons√°vel designado pela alta dire√ß√£o para coordenar as a√ß√µes de SST?',
      'A cultura de seguran√ßa √© promovida e incentivada por todos os n√≠veis de lideran√ßa?',
    ],
    // Processos e Procedimentos
    [
      'Existem procedimentos operacionais padr√£o (POPs) documentados para atividades de risco?',
      'Os processos de SST s√£o revisados e atualizados periodicamente?',
      'H√° um sistema de gest√£o de SST implementado (ex: ISO 45001, OHSAS)?',
      'Os procedimentos de emerg√™ncia e evacua√ß√£o est√£o documentados e s√£o testados regularmente?',
      'Existe um processo formal para an√°lise de riscos antes de novas atividades?',
    ],
    // Conformidade Legal
    [
      'A empresa mant√©m um invent√°rio atualizado de todas as NRs aplic√°veis?',
      'S√£o realizadas auditorias internas para verificar conformidade legal?',
      'Todos os documentos legais exigidos (PPRA, PCMSO, LTCAT, etc.) est√£o atualizados?',
      'H√° um processo para monitorar mudan√ßas na legisla√ß√£o de SST?',
      'As n√£o conformidades legais identificadas s√£o tratadas com planos de a√ß√£o?',
    ],
    // Capacita√ß√£o e Treinamento
    [
      'Todos os colaboradores recebem treinamento de integra√ß√£o em SST na admiss√£o?',
      'H√° um cronograma de treinamentos peri√≥dicos e reciclagens em SST?',
      'Os treinamentos s√£o registrados e h√° controle de certifica√ß√µes?',
      'Existem programas de conscientiza√ß√£o cont√≠nua sobre seguran√ßa no trabalho?',
      'A efic√°cia dos treinamentos √© avaliada atrav√©s de testes ou indicadores?',
    ],
    // Dados e Indicadores
    [
      'A empresa registra e monitora indicadores como taxa de frequ√™ncia e gravidade de acidentes?',
      'Existe um sistema para registro e investiga√ß√£o de acidentes e incidentes?',
      'Os dados de SST s√£o analisados regularmente para identificar tend√™ncias?',
      'H√° dashboards ou relat√≥rios peri√≥dicos de SST para a gest√£o?',
      'As li√ß√µes aprendidas dos acidentes s√£o compartilhadas e usadas para melhorias?',
    ],
  ]

  for (let i = 0; i < dimensoes.length; i++) {
    const perguntas = perguntasPorDimensao[i]
    for (let j = 0; j < perguntas.length; j++) {
      await prisma.question.create({
        data: {
          dimensionId: dimensoes[i].id,
          text: perguntas[j],
          type: 'LIKERT',
          weight: 1.0,
          order: j + 1,
        },
      })
    }
  }

  console.log('‚úì Perguntas criadas (25 perguntas no total)')

  console.log('\n‚úÖ Seed conclu√≠do com sucesso!')
  console.log('\nüìã Resumo:')
  console.log(`   - ${(await prisma.company.count())} empresas`)
  console.log(`   - ${(await prisma.iMSSTDimension.count())} dimens√µes IMSST`)
  console.log(`   - ${(await prisma.question.count())} perguntas`)
}

main()
  .catch((e) => {
    console.error('‚ùå Erro durante seed:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
