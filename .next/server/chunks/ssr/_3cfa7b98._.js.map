{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n        \"icon-sm\": \"size-8\",\n        \"icon-lg\": \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/actions/templates.ts"],"sourcesContent":["'use server'\n\nimport { prisma } from '@/lib/prisma'\nimport { revalidatePath } from 'next/cache'\nimport { getCurrentUser, isPlatformAdmin } from '@/lib/auth'\nimport { TemplateStatus, QuestionType } from '@prisma/client'\n\nexport async function getAllTemplates() {\n  try {\n    const templates = await prisma.diagnosticTemplate.findMany({\n      include: {\n        sections: {\n          include: {\n            questions: {\n              where: { active: true },\n              orderBy: { createdAt: 'asc' }\n            }\n          },\n          orderBy: { order: 'asc' }\n        },\n        _count: {\n          select: {\n            sections: true,\n            assessments: true\n          }\n        }\n      },\n      orderBy: { createdAt: 'desc' }\n    })\n\n    return { success: true, templates }\n  } catch (error) {\n    console.error('Erro ao buscar templates:', error)\n    return { error: 'Erro ao buscar templates' }\n  }\n}\n\nexport async function getTemplateById(templateId: string) {\n  try {\n    const template = await prisma.diagnosticTemplate.findUnique({\n      where: { id: templateId },\n      include: {\n        sections: {\n          include: {\n            questions: {\n              where: { active: true },\n              orderBy: { createdAt: 'asc' }\n            }\n          },\n          orderBy: { order: 'asc' }\n        },\n        _count: {\n          select: { assessments: true }\n        }\n      }\n    })\n\n    if (!template) {\n      return { error: 'Template não encontrado' }\n    }\n\n    return { success: true, template }\n  } catch (error) {\n    console.error('Erro ao buscar template:', error)\n    return { error: 'Erro ao buscar template' }\n  }\n}\n\nexport async function updateTemplateStatus(templateId: string, status: TemplateStatus) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  const isAdmin = await isPlatformAdmin(user.id)\n  if (!isAdmin) {\n    return { error: 'Apenas administradores podem alterar o status de templates' }\n  }\n\n  try {\n    await prisma.diagnosticTemplate.update({\n      where: { id: templateId },\n      data: { status }\n    })\n\n    revalidatePath('/dashboard/templates')\n    return { success: true }\n  } catch (error) {\n    console.error('Erro ao atualizar status do template:', error)\n    return { error: 'Erro ao atualizar status do template' }\n  }\n}\n\nexport async function deleteTemplate(templateId: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  const isAdmin = await isPlatformAdmin(user.id)\n  if (!isAdmin) {\n    return { error: 'Apenas administradores podem excluir templates' }\n  }\n\n  try {\n    // Verificar se há assessments usando este template\n    const assessmentCount = await prisma.assessment.count({\n      where: { templateId }\n    })\n\n    if (assessmentCount > 0) {\n      return { error: `Não é possível excluir. Existem ${assessmentCount} diagnósticos usando este template.` }\n    }\n\n    await prisma.diagnosticTemplate.delete({\n      where: { id: templateId }\n    })\n\n    revalidatePath('/dashboard/templates')\n    return { success: true }\n  } catch (error) {\n    console.error('Erro ao excluir template:', error)\n    return { error: 'Erro ao excluir template' }\n  }\n}\n\nexport async function getPublishedTemplates() {\n  try {\n    const templates = await prisma.diagnosticTemplate.findMany({\n      where: { status: 'PUBLISHED' },\n      select: {\n        id: true,\n        name: true,\n        description: true,\n        type: true,\n        _count: {\n          select: { sections: true }\n        }\n      },\n      orderBy: { name: 'asc' }\n    })\n\n    return { success: true, templates }\n  } catch (error) {\n    console.error('Erro ao buscar templates publicados:', error)\n    return { error: 'Erro ao buscar templates publicados' }\n  }\n}\n\nexport async function publishTemplate(templateId: string) {\n  return updateTemplateStatus(templateId, 'PUBLISHED')\n}\n\nexport async function updateTemplate(\n  templateId: string,\n  data: {\n    name: string\n    description: string\n    sections: Array<{\n      id?: string\n      title: string\n      order: number\n      questions: Array<{\n        id?: string\n        text: string\n        type: string\n        weight: number\n        reference?: string | null\n        requiresJustification: boolean\n        requiresEvidence: boolean\n      }>\n    }>\n  }\n) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  const isAdmin = await isPlatformAdmin(user.id)\n  if (!isAdmin) {\n    return { error: 'Apenas administradores podem editar templates' }\n  }\n\n  try {\n    // Verificar se template existe\n    const template = await prisma.diagnosticTemplate.findUnique({\n      where: { id: templateId },\n      include: {\n        sections: {\n          include: { questions: true }\n        }\n      }\n    })\n\n    if (!template) {\n      return { error: 'Template não encontrado' }\n    }\n\n    // Atualizar template e suas seções/perguntas\n    await prisma.$transaction(async (tx) => {\n      // Atualizar informações básicas do template\n      await tx.diagnosticTemplate.update({\n        where: { id: templateId },\n        data: {\n          name: data.name,\n          description: data.description\n        }\n      })\n\n      // IDs de seções e perguntas que devem ser mantidos\n      const sectionIdsToKeep = data.sections.filter(s => s.id).map(s => s.id!)\n      const questionIdsToKeep = data.sections\n        .flatMap(s => s.questions.filter(q => q.id).map(q => q.id!))\n\n      // Deletar seções que foram removidas\n      await tx.diagnosticSection.deleteMany({\n        where: {\n          templateId,\n          id: { notIn: sectionIdsToKeep }\n        }\n      })\n\n      // Processar cada seção\n      for (const section of data.sections) {\n        if (section.id) {\n          // Atualizar seção existente\n          await tx.diagnosticSection.update({\n            where: { id: section.id },\n            data: {\n              title: section.title,\n              order: section.order\n            }\n          })\n\n          // Deletar perguntas removidas desta seção\n          await tx.diagnosticQuestion.deleteMany({\n            where: {\n              sectionId: section.id,\n              id: { notIn: section.questions.filter(q => q.id).map(q => q.id!) }\n            }\n          })\n\n          // Processar perguntas\n          for (const question of section.questions) {\n            if (question.id) {\n              // Atualizar pergunta existente\n              await tx.diagnosticQuestion.update({\n                where: { id: question.id },\n                data: {\n                  text: question.text,\n                  type: question.type as QuestionType,\n                  weight: question.weight,\n                  reference: question.reference,\n                  requiresJustification: question.requiresJustification,\n                  requiresEvidence: question.requiresEvidence\n                }\n              })\n            } else {\n              // Criar nova pergunta\n              await tx.diagnosticQuestion.create({\n                data: {\n                  sectionId: section.id,\n                  text: question.text,\n                  type: question.type as QuestionType,\n                  weight: question.weight,\n                  reference: question.reference,\n                  requiresJustification: question.requiresJustification,\n                  requiresEvidence: question.requiresEvidence\n                }\n              })\n            }\n          }\n        } else {\n          // Criar nova seção com suas perguntas\n          await tx.diagnosticSection.create({\n            data: {\n              templateId,\n              title: section.title,\n              order: section.order,\n              questions: {\n                create: section.questions.map(q => ({\n                  text: q.text,\n                  type: q.type as QuestionType,\n                  weight: q.weight,\n                  reference: q.reference,\n                  requiresJustification: q.requiresJustification,\n                  requiresEvidence: q.requiresEvidence\n                }))\n              }\n            }\n          })\n        }\n      }\n    })\n\n    revalidatePath('/dashboard/templates')\n    revalidatePath(`/dashboard/templates/${templateId}`)\n    return { success: true }\n  } catch (error) {\n    console.error('Erro ao atualizar template:', error)\n    return { error: 'Erro ao atualizar template' }\n  }\n}\n\nexport async function applyTemplateToAssessment(assessmentId: string, templateId: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  try {\n    // Verificar se o assessment existe e se o usuário tem permissão\n    const assessment = await prisma.assessment.findUnique({\n      where: { id: assessmentId },\n      select: { companyId: true, status: true, templateId: true }\n    })\n\n    if (!assessment) {\n      return { error: 'Diagnóstico não encontrado' }\n    }\n\n    if (assessment.status !== 'DRAFT') {\n      return { error: 'Só é possível aplicar template em diagnósticos com status DRAFT' }\n    }\n\n    if (assessment.templateId) {\n      return { error: 'Este diagnóstico já possui um template associado' }\n    }\n\n    const isAdmin = await isPlatformAdmin(user.id)\n    const membership = await prisma.membership.findFirst({\n      where: {\n        userId: user.id,\n        companyId: assessment.companyId,\n        status: 'ACTIVE'\n      }\n    })\n\n    if (!isAdmin && !membership) {\n      return { error: 'Sem permissão para modificar este diagnóstico' }\n    }\n\n    // Buscar o template com seções e perguntas para validação\n    const template = await prisma.diagnosticTemplate.findUnique({\n      where: { id: templateId },\n      include: {\n        sections: {\n          include: {\n            questions: {\n              where: { active: true }\n            }\n          }\n        }\n      }\n    })\n\n    if (!template) {\n      return { error: 'Template não encontrado' }\n    }\n\n    if (template.status !== 'PUBLISHED') {\n      return { error: 'Apenas templates publicados podem ser aplicados' }\n    }\n\n    // Associar o template ao assessment\n    // As seções e perguntas já existem no template e serão acessadas via relacionamento\n    await prisma.assessment.update({\n      where: { id: assessmentId },\n      data: { templateId }\n    })\n\n    revalidatePath(`/dashboard/diagnostics/${assessmentId}`)\n    return { \n      success: true, \n      sectionsCount: template.sections.length,\n      questionsCount: template.sections.reduce((sum, s) => sum + s.questions.length, 0)\n    }\n  } catch (error) {\n    console.error('Erro ao aplicar template:', error)\n    return { error: 'Erro ao aplicar template ao diagnóstico' }\n  }\n}\n"],"names":[],"mappings":";;;;;;;IAqJsB,kBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction AlertDialog({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />\n}\n\nfunction AlertDialogTrigger({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\n  return (\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n  )\n}\n\nfunction AlertDialogPortal({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\n  return (\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n  )\n}\n\nfunction AlertDialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      />\n    </AlertDialogPortal>\n  )\n}\n\nfunction AlertDialogHeader({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogFooter({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogAction({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\n  return (\n    <AlertDialogPrimitive.Action\n      className={cn(buttonVariants(), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogCancel({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAEA;AACA;AANA;;;;;AAQA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,8OAAC,mLAAyB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,mBAAmB,EAC1B,GAAG,OACuD;IAC1D,qBACE,8OAAC,sLAA4B;QAAC,aAAU;QAAwB,GAAG,KAAK;;;;;;AAE5E;AAEA,SAAS,kBAAkB,EACzB,GAAG,OACsD;IACzD,qBACE,8OAAC,qLAA2B;QAAC,aAAU;QAAuB,GAAG,KAAK;;;;;;AAE1E;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC,sLAA4B;QAC3B,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,sLAA4B;gBAC3B,aAAU;gBACV,WAAW,IAAA,kHAAE,EACX,+WACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIjB;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACqD;IACxD,qBACE,8OAAC,oLAA0B;QACzB,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,8OAAC,0LAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,qLAA2B;QAC1B,WAAW,IAAA,kHAAE,EAAC,IAAA,6IAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,qLAA2B;QAC1B,WAAW,IAAA,kHAAE,EAAC,IAAA,6IAAc,EAAC;YAAE,SAAS;QAAU,IAAI;QACrD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,0KAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,6KAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,8OAAC,4KAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,6KAAuB;QACtB,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OAGJ;IACC,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,6KAAuB;gBACtB,aAAU;gBACV,WAAW,IAAA,kHAAE,EACX,+WACA;gBAED,GAAG,KAAK;;oBAER;oBACA,iCACC,8OAAC,2KAAqB;wBACpB,aAAU;wBACV,WAAU;;0CAEV,8OAAC,yMAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,2KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,iLAA2B;QAC1B,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-2 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,4JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,kHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/dashboard/template-review-suggestions.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { \n  CheckCircle2, \n  XCircle, \n  AlertCircle, \n  CheckCheck,\n  Sparkles,\n  ChevronDown,\n  ChevronUp\n} from 'lucide-react'\n\ntype SuggestionType = 'add_question' | 'modify_question' | 'remove_question' | 'add_section' | 'reorganize' | 'update_reference'\ntype Priority = 'high' | 'medium' | 'low'\n\ninterface SuggestedQuestion {\n  text: string\n  type: 'BOOLEAN' | 'SCORE'\n  weight: number\n  reference?: string | null\n  requiresJustification: boolean\n  requiresEvidence: boolean\n}\n\ninterface Suggestion {\n  type: SuggestionType\n  priority: Priority\n  category: string\n  description: string\n  sectionTitle?: string\n  currentQuestion?: string\n  suggestedQuestion?: SuggestedQuestion\n}\n\ninterface ReviewResult {\n  overallAssessment: string\n  strengths: string[]\n  suggestions: Suggestion[]\n}\n\ninterface TemplateReviewSuggestionsProps {\n  templateId: string\n  templateName: string\n  review: ReviewResult\n  onApplySuggestions: (acceptedSuggestions: Suggestion[]) => void\n  onClose: () => void\n}\n\nexport function TemplateReviewSuggestions({\n  templateId,\n  templateName,\n  review,\n  onApplySuggestions,\n  onClose\n}: TemplateReviewSuggestionsProps) {\n  const [acceptedSuggestions, setAcceptedSuggestions] = useState<Set<number>>(new Set())\n  const [expandedSuggestions, setExpandedSuggestions] = useState<Set<number>>(new Set())\n\n  const toggleSuggestion = (index: number) => {\n    const newSet = new Set(acceptedSuggestions)\n    if (newSet.has(index)) {\n      newSet.delete(index)\n    } else {\n      newSet.add(index)\n    }\n    setAcceptedSuggestions(newSet)\n  }\n\n  const toggleExpanded = (index: number) => {\n    const newSet = new Set(expandedSuggestions)\n    if (newSet.has(index)) {\n      newSet.delete(index)\n    } else {\n      newSet.add(index)\n    }\n    setExpandedSuggestions(newSet)\n  }\n\n  const acceptAllHigh = () => {\n    const highPriorityIndices = review.suggestions\n      .map((s, i) => ({ s, i }))\n      .filter(({ s }) => s.priority === 'high')\n      .map(({ i }) => i)\n    setAcceptedSuggestions(new Set(highPriorityIndices))\n  }\n\n  const handleApply = () => {\n    const accepted = Array.from(acceptedSuggestions).map(i => review.suggestions[i])\n    onApplySuggestions(accepted)\n  }\n\n  const getPriorityColor = (priority: Priority) => {\n    switch (priority) {\n      case 'high': return 'bg-red-100 text-red-800 border-red-200'\n      case 'medium': return 'bg-orange-100 text-orange-800 border-orange-200'\n      case 'low': return 'bg-blue-100 text-blue-800 border-blue-200'\n    }\n  }\n\n  const getPriorityIcon = (priority: Priority) => {\n    switch (priority) {\n      case 'high': return <AlertCircle className=\"h-3 w-3\" />\n      case 'medium': return <AlertCircle className=\"h-3 w-3\" />\n      case 'low': return <AlertCircle className=\"h-3 w-3\" />\n    }\n  }\n\n  const getTypeLabel = (type: SuggestionType) => {\n    const labels = {\n      add_question: 'Adicionar Pergunta',\n      modify_question: 'Modificar Pergunta',\n      remove_question: 'Remover Pergunta',\n      add_section: 'Adicionar Seção',\n      reorganize: 'Reorganizar',\n      update_reference: 'Atualizar Referência'\n    }\n    return labels[type]\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Avaliação Geral */}\n      <Card className=\"border-teal-200 bg-teal-50\">\n        <CardHeader>\n          <CardTitle className=\"text-base text-teal-900 flex items-center gap-2\">\n            <Sparkles className=\"h-5 w-5\" />\n            Revisão do Template: {templateName}\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-sm text-teal-800 mb-4\">{review.overallAssessment}</p>\n          \n          {review.strengths.length > 0 && (\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-semibold text-teal-900 flex items-center gap-2\">\n                <CheckCircle2 className=\"h-4 w-4\" />\n                Pontos Fortes\n              </h4>\n              <ul className=\"list-disc list-inside space-y-1 text-sm text-teal-800\">\n                {review.strengths.map((strength, i) => (\n                  <li key={i}>{strength}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Sugestões */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"text-base\">\n                {review.suggestions.length} Sugestões de Melhoria\n              </CardTitle>\n              <CardDescription className=\"text-xs mt-1\">\n                {acceptedSuggestions.size} selecionadas\n              </CardDescription>\n            </div>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={acceptAllHigh}\n              className=\"text-xs\"\n            >\n              Aceitar Todas (Alta Prioridade)\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          {review.suggestions.map((suggestion, index) => {\n            const isAccepted = acceptedSuggestions.has(index)\n            const isExpanded = expandedSuggestions.has(index)\n\n            return (\n              <div\n                key={index}\n                className={`border rounded-md p-3 transition-all ${\n                  isAccepted ? 'border-green-300 bg-green-50' : 'border-gray-200'\n                }`}\n              >\n                <div className=\"flex items-start gap-3\">\n                  <button\n                    onClick={() => toggleSuggestion(index)}\n                    className=\"mt-1 flex-shrink-0\"\n                  >\n                    {isAccepted ? (\n                      <CheckCircle2 className=\"h-5 w-5 text-green-600\" />\n                    ) : (\n                      <div className=\"h-5 w-5 border-2 border-gray-300 rounded-full\" />\n                    )}\n                  </button>\n\n                  <div className=\"flex-1 space-y-2\">\n                    <div className=\"flex items-start gap-2 flex-wrap\">\n                      <Badge variant=\"outline\" className={`text-xs ${getPriorityColor(suggestion.priority)}`}>\n                        {getPriorityIcon(suggestion.priority)}\n                        <span className=\"ml-1\">{suggestion.priority.toUpperCase()}</span>\n                      </Badge>\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {getTypeLabel(suggestion.type)}\n                      </Badge>\n                      {suggestion.category && (\n                        <Badge variant=\"outline\" className=\"text-xs bg-gray-50\">\n                          {suggestion.category}\n                        </Badge>\n                      )}\n                    </div>\n\n                    <p className=\"text-sm text-gray-900\">{suggestion.description}</p>\n\n                    {(suggestion.sectionTitle || suggestion.currentQuestion || suggestion.suggestedQuestion) && (\n                      <button\n                        onClick={() => toggleExpanded(index)}\n                        className=\"text-xs text-teal-600 hover:text-teal-700 flex items-center gap-1\"\n                      >\n                        {isExpanded ? (\n                          <>\n                            <ChevronUp className=\"h-3 w-3\" />\n                            Ocultar detalhes\n                          </>\n                        ) : (\n                          <>\n                            <ChevronDown className=\"h-3 w-3\" />\n                            Ver detalhes\n                          </>\n                        )}\n                      </button>\n                    )}\n\n                    {isExpanded && (\n                      <div className=\"mt-3 p-3 bg-gray-50 rounded-md space-y-2 text-xs\">\n                        {suggestion.sectionTitle && (\n                          <div>\n                            <span className=\"font-semibold text-gray-700\">Seção: </span>\n                            <span className=\"text-gray-600\">{suggestion.sectionTitle}</span>\n                          </div>\n                        )}\n                        {suggestion.currentQuestion && (\n                          <div>\n                            <span className=\"font-semibold text-gray-700\">Pergunta Atual: </span>\n                            <span className=\"text-gray-600\">{suggestion.currentQuestion}</span>\n                          </div>\n                        )}\n                        {suggestion.suggestedQuestion && (\n                          <div className=\"space-y-1 border-t border-gray-200 pt-2 mt-2\">\n                            <div className=\"font-semibold text-gray-700\">Sugestão:</div>\n                            <div className=\"text-gray-600\">{suggestion.suggestedQuestion.text}</div>\n                            <div className=\"flex flex-wrap gap-2 mt-2\">\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {suggestion.suggestedQuestion.type}\n                              </Badge>\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                Peso: {suggestion.suggestedQuestion.weight}\n                              </Badge>\n                              {suggestion.suggestedQuestion.reference && (\n                                <Badge variant=\"outline\" className=\"text-xs\">\n                                  {suggestion.suggestedQuestion.reference}\n                                </Badge>\n                              )}\n                              {suggestion.suggestedQuestion.requiresJustification && (\n                                <Badge variant=\"outline\" className=\"text-xs bg-orange-50 text-orange-700\">\n                                  Justificativa\n                                </Badge>\n                              )}\n                              {suggestion.suggestedQuestion.requiresEvidence && (\n                                <Badge variant=\"outline\" className=\"text-xs bg-blue-50 text-blue-700\">\n                                  Evidência\n                                </Badge>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </CardContent>\n      </Card>\n\n      {/* Ações */}\n      <div className=\"flex items-center justify-between gap-3 sticky bottom-0 bg-white border-t border-gray-200 p-4 -mx-4 -mb-4\">\n        <Button\n          variant=\"outline\"\n          onClick={onClose}\n          className=\"flex-1\"\n        >\n          <XCircle className=\"mr-2 h-4 w-4\" />\n          Cancelar\n        </Button>\n        <Button\n          onClick={handleApply}\n          disabled={acceptedSuggestions.size === 0}\n          className=\"flex-1 bg-teal-600 hover:bg-teal-700\"\n        >\n          <CheckCheck className=\"mr-2 h-4 w-4\" />\n          Aplicar {acceptedSuggestions.size} Sugestões\n        </Button>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;;;;;;;AAoDO,SAAS,0BAA0B,EACxC,UAAU,EACV,YAAY,EACZ,MAAM,EACN,kBAAkB,EAClB,OAAO,EACwB;IAC/B,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,IAAA,iNAAQ,EAAc,IAAI;IAChF,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,IAAA,iNAAQ,EAAc,IAAI;IAEhF,MAAM,mBAAmB,CAAC;QACxB,MAAM,SAAS,IAAI,IAAI;QACvB,IAAI,OAAO,GAAG,CAAC,QAAQ;YACrB,OAAO,MAAM,CAAC;QAChB,OAAO;YACL,OAAO,GAAG,CAAC;QACb;QACA,uBAAuB;IACzB;IAEA,MAAM,iBAAiB,CAAC;QACtB,MAAM,SAAS,IAAI,IAAI;QACvB,IAAI,OAAO,GAAG,CAAC,QAAQ;YACrB,OAAO,MAAM,CAAC;QAChB,OAAO;YACL,OAAO,GAAG,CAAC;QACb;QACA,uBAAuB;IACzB;IAEA,MAAM,gBAAgB;QACpB,MAAM,sBAAsB,OAAO,WAAW,CAC3C,GAAG,CAAC,CAAC,GAAG,IAAM,CAAC;gBAAE;gBAAG;YAAE,CAAC,GACvB,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAK,EAAE,QAAQ,KAAK,QACjC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAK;QAClB,uBAAuB,IAAI,IAAI;IACjC;IAEA,MAAM,cAAc;QAClB,MAAM,WAAW,MAAM,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAA,IAAK,OAAO,WAAW,CAAC,EAAE;QAC/E,mBAAmB;IACrB;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAQ;YACN,KAAK;gBAAQ,OAAO;YACpB,KAAK;gBAAU,OAAO;YACtB,KAAK;gBAAO,OAAO;QACrB;IACF;IAEA,MAAM,kBAAkB,CAAC;QACvB,OAAQ;YACN,KAAK;gBAAQ,qBAAO,8OAAC,mOAAW;oBAAC,WAAU;;;;;;YAC3C,KAAK;gBAAU,qBAAO,8OAAC,mOAAW;oBAAC,WAAU;;;;;;YAC7C,KAAK;gBAAO,qBAAO,8OAAC,mOAAW;oBAAC,WAAU;;;;;;QAC5C;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,SAAS;YACb,cAAc;YACd,iBAAiB;YACjB,iBAAiB;YACjB,aAAa;YACb,YAAY;YACZ,kBAAkB;QACpB;QACA,OAAO,MAAM,CAAC,KAAK;IACrB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,iIAAI;gBAAC,WAAU;;kCACd,8OAAC,uIAAU;kCACT,cAAA,8OAAC,sIAAS;4BAAC,WAAU;;8CACnB,8OAAC,sNAAQ;oCAAC,WAAU;;;;;;gCAAY;gCACV;;;;;;;;;;;;kCAG1B,8OAAC,wIAAW;;0CACV,8OAAC;gCAAE,WAAU;0CAA8B,OAAO,iBAAiB;;;;;;4BAElE,OAAO,SAAS,CAAC,MAAM,GAAG,mBACzB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;;0DACZ,8OAAC,qOAAY;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAGtC,8OAAC;wCAAG,WAAU;kDACX,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,kBAC/B,8OAAC;0DAAY;+CAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASrB,8OAAC,iIAAI;;kCACH,8OAAC,uIAAU;kCACT,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDACC,8OAAC,sIAAS;4CAAC,WAAU;;gDAClB,OAAO,WAAW,CAAC,MAAM;gDAAC;;;;;;;sDAE7B,8OAAC,4IAAe;4CAAC,WAAU;;gDACxB,oBAAoB,IAAI;gDAAC;;;;;;;;;;;;;8CAG9B,8OAAC,qIAAM;oCACL,MAAK;oCACL,SAAQ;oCACR,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;kCAKL,8OAAC,wIAAW;wBAAC,WAAU;kCACpB,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,YAAY;4BACnC,MAAM,aAAa,oBAAoB,GAAG,CAAC;4BAC3C,MAAM,aAAa,oBAAoB,GAAG,CAAC;4BAE3C,qBACE,8OAAC;gCAEC,WAAW,CAAC,qCAAqC,EAC/C,aAAa,iCAAiC,mBAC9C;0CAEF,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,SAAS,IAAM,iBAAiB;4CAChC,WAAU;sDAET,2BACC,8OAAC,qOAAY;gDAAC,WAAU;;;;;qEAExB,8OAAC;gDAAI,WAAU;;;;;;;;;;;sDAInB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;;sEACb,8OAAC,mIAAK;4DAAC,SAAQ;4DAAU,WAAW,CAAC,QAAQ,EAAE,iBAAiB,WAAW,QAAQ,GAAG;;gEACnF,gBAAgB,WAAW,QAAQ;8EACpC,8OAAC;oEAAK,WAAU;8EAAQ,WAAW,QAAQ,CAAC,WAAW;;;;;;;;;;;;sEAEzD,8OAAC,mIAAK;4DAAC,SAAQ;4DAAU,WAAU;sEAChC,aAAa,WAAW,IAAI;;;;;;wDAE9B,WAAW,QAAQ,kBAClB,8OAAC,mIAAK;4DAAC,SAAQ;4DAAU,WAAU;sEAChC,WAAW,QAAQ;;;;;;;;;;;;8DAK1B,8OAAC;oDAAE,WAAU;8DAAyB,WAAW,WAAW;;;;;;gDAE3D,CAAC,WAAW,YAAY,IAAI,WAAW,eAAe,IAAI,WAAW,iBAAiB,mBACrF,8OAAC;oDACC,SAAS,IAAM,eAAe;oDAC9B,WAAU;8DAET,2BACC;;0EACE,8OAAC,6NAAS;gEAAC,WAAU;;;;;;4DAAY;;qFAInC;;0EACE,8OAAC,mOAAW;gEAAC,WAAU;;;;;;4DAAY;;;;;;;;gDAO1C,4BACC,8OAAC;oDAAI,WAAU;;wDACZ,WAAW,YAAY,kBACtB,8OAAC;;8EACC,8OAAC;oEAAK,WAAU;8EAA8B;;;;;;8EAC9C,8OAAC;oEAAK,WAAU;8EAAiB,WAAW,YAAY;;;;;;;;;;;;wDAG3D,WAAW,eAAe,kBACzB,8OAAC;;8EACC,8OAAC;oEAAK,WAAU;8EAA8B;;;;;;8EAC9C,8OAAC;oEAAK,WAAU;8EAAiB,WAAW,eAAe;;;;;;;;;;;;wDAG9D,WAAW,iBAAiB,kBAC3B,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,WAAU;8EAA8B;;;;;;8EAC7C,8OAAC;oEAAI,WAAU;8EAAiB,WAAW,iBAAiB,CAAC,IAAI;;;;;;8EACjE,8OAAC;oEAAI,WAAU;;sFACb,8OAAC,mIAAK;4EAAC,SAAQ;4EAAU,WAAU;sFAChC,WAAW,iBAAiB,CAAC,IAAI;;;;;;sFAEpC,8OAAC,mIAAK;4EAAC,SAAQ;4EAAU,WAAU;;gFAAU;gFACpC,WAAW,iBAAiB,CAAC,MAAM;;;;;;;wEAE3C,WAAW,iBAAiB,CAAC,SAAS,kBACrC,8OAAC,mIAAK;4EAAC,SAAQ;4EAAU,WAAU;sFAChC,WAAW,iBAAiB,CAAC,SAAS;;;;;;wEAG1C,WAAW,iBAAiB,CAAC,qBAAqB,kBACjD,8OAAC,mIAAK;4EAAC,SAAQ;4EAAU,WAAU;sFAAuC;;;;;;wEAI3E,WAAW,iBAAiB,CAAC,gBAAgB,kBAC5C,8OAAC,mIAAK;4EAAC,SAAQ;4EAAU,WAAU;sFAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BA1FjF;;;;;wBAuGX;;;;;;;;;;;;0BAKJ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,qIAAM;wBACL,SAAQ;wBACR,SAAS;wBACT,WAAU;;0CAEV,8OAAC,uNAAO;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAGtC,8OAAC,qIAAM;wBACL,SAAS;wBACT,UAAU,oBAAoB,IAAI,KAAK;wBACvC,WAAU;;0CAEV,8OAAC,gOAAU;gCAAC,WAAU;;;;;;4BAAiB;4BAC9B,oBAAoB,IAAI;4BAAC;;;;;;;;;;;;;;;;;;;AAK5C","debugId":null}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/dashboard/templates/%5Bid%5D/template-actions.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { Button } from '@/components/ui/button'\nimport { Edit, CheckCircle2, Sparkles, Loader2 } from 'lucide-react'\nimport { publishTemplate } from '@/app/actions/templates'\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog'\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog'\nimport { TemplateReviewSuggestions } from '@/components/dashboard/template-review-suggestions'\n\ninterface TemplateActionsProps {\n  templateId: string\n  status: string\n}\n\nexport function TemplateActions({ templateId, status }: TemplateActionsProps) {\n  const router = useRouter()\n  const [showPublishDialog, setShowPublishDialog] = useState(false)\n  const [isPublishing, setIsPublishing] = useState(false)\n  const [showReviewDialog, setShowReviewDialog] = useState(false)\n  const [isReviewing, setIsReviewing] = useState(false)\n  const [reviewResult, setReviewResult] = useState<any>(null)\n\n  const handlePublish = async () => {\n    setIsPublishing(true)\n    const result = await publishTemplate(templateId)\n    \n    if (result.success) {\n      router.refresh()\n      setShowPublishDialog(false)\n    } else {\n      alert(result.error || 'Erro ao publicar template')\n    }\n    setIsPublishing(false)\n  }\n\n  const handleEdit = () => {\n    router.push(`/dashboard/templates/${templateId}/edit`)\n  }\n\n  const handleReview = async () => {\n    setIsReviewing(true)\n    setShowReviewDialog(true)\n    setReviewResult(null)\n\n    try {\n      const response = await fetch('/api/ai/template-reviewer', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ templateId })\n      })\n\n      const data = await response.json()\n\n      if (!response.ok || data.error) {\n        throw new Error(data.error || 'Erro ao revisar template')\n      }\n\n      setReviewResult(data)\n    } catch (error) {\n      console.error('Erro:', error)\n      alert(error instanceof Error ? error.message : 'Erro ao revisar template com IA')\n      setShowReviewDialog(false)\n    } finally {\n      setIsReviewing(false)\n    }\n  }\n\n  const handleApplySuggestions = (acceptedSuggestions: any[]) => {\n    // Armazenar sugestões aceitas no localStorage para uso na página de edição\n    localStorage.setItem('aiSuggestions', JSON.stringify(acceptedSuggestions))\n    // Redirecionar para a página de edição\n    router.push(`/dashboard/templates/${templateId}/edit?fromAI=true`)\n  }\n\n  const handleCloseReview = () => {\n    setShowReviewDialog(false)\n    setReviewResult(null)\n  }\n\n  return (\n    <>\n      <div className=\"flex gap-2\">\n        <Button \n          size=\"sm\" \n          className=\"gap-2 bg-teal-600 hover:bg-teal-700\"\n          onClick={handleEdit}\n        >\n          <Edit className=\"h-4 w-4\" />\n          Editar Template\n        </Button>\n        <Button \n          variant=\"outline\" \n          size=\"sm\" \n          className=\"gap-2\"\n          onClick={handleReview}\n          disabled={isReviewing}\n        >\n          {isReviewing ? (\n            <>\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n              Revisando...\n            </>\n          ) : (\n            <>\n              <Sparkles className=\"h-4 w-4\" />\n              Revisar com IA\n            </>\n          )}\n        </Button>\n        {status === 'DRAFT' && (\n          <Button \n            variant=\"outline\"\n            size=\"sm\" \n            className=\"gap-2\"\n            onClick={() => setShowPublishDialog(true)}\n          >\n            <CheckCircle2 className=\"h-4 w-4\" />\n            Publicar\n          </Button>\n        )}\n      </div>\n\n      <AlertDialog open={showPublishDialog} onOpenChange={setShowPublishDialog}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Publicar Template?</AlertDialogTitle>\n            <AlertDialogDescription>\n              Ao publicar este template, ele ficará disponível para uso na criação de novos diagnósticos.\n              Você ainda poderá editá-lo após a publicação.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel disabled={isPublishing}>Cancelar</AlertDialogCancel>\n            <AlertDialogAction\n              onClick={handlePublish}\n              disabled={isPublishing}\n              className=\"bg-teal-600 hover:bg-teal-700\"\n            >\n              {isPublishing ? 'Publicando...' : 'Publicar'}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      <Dialog open={showReviewDialog} onOpenChange={setShowReviewDialog}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Sugestões da IA para o Template</DialogTitle>\n            <DialogDescription>\n              {isReviewing ? (\n                <div className=\"flex items-center gap-2 py-8\">\n                  <Loader2 className=\"h-5 w-5 animate-spin text-teal-600\" />\n                  <span>Analisando template e gerando sugestões...</span>\n                </div>\n              ) : (\n                'Revise as sugestões e selecione as que deseja aplicar ao template.'\n              )}\n            </DialogDescription>\n          </DialogHeader>\n          \n          {reviewResult && !isReviewing && (\n            <TemplateReviewSuggestions\n              templateId={reviewResult.templateId}\n              templateName={reviewResult.templateName}\n              review={reviewResult.review}\n              onApplySuggestions={handleApplySuggestions}\n              onClose={handleCloseReview}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n    </>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1482, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/dashboard/template-sections-view.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { ChevronDown, ChevronUp } from 'lucide-react'\n\ninterface Question {\n  id: string\n  text: string\n  type: string\n  weight: number\n  reference: string | null\n  requiresJustification: boolean\n  requiresEvidence: boolean\n}\n\ninterface Section {\n  id: string\n  title: string\n  description: string | null\n  order: number\n  questions: Question[]\n}\n\ninterface TemplateSectionsViewProps {\n  sections: Section[]\n}\n\nexport function TemplateSectionsView({ sections }: TemplateSectionsViewProps) {\n  const [expandedSections, setExpandedSections] = useState<Record<string, boolean>>({})\n\n  const toggleSection = (sectionId: string) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [sectionId]: !prev[sectionId]\n    }))\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <h2 className=\"text-lg font-semibold\">Seções e Perguntas</h2>\n      {sections.map((section) => {\n        const isExpanded = expandedSections[section.id] || false\n        const questionCount = `${section.questions.length} pergunta${section.questions.length !== 1 ? 's' : ''}`\n\n        return (\n          <Card key={section.id}>\n            <CardHeader\n              className=\"cursor-pointer hover:bg-gray-50 transition-colors\"\n              onClick={() => toggleSection(section.id)}\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center gap-3\">\n                    <CardTitle className=\"text-base\">\n                      {section.order}. {section.title}\n                    </CardTitle>\n                    <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-0.5 rounded\">\n                      {questionCount}\n                    </span>\n                  </div>\n                  {section.description && isExpanded && (\n                    <p className=\"text-sm text-gray-600 mt-1\">{section.description}</p>\n                  )}\n                </div>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"ml-2\"\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    toggleSection(section.id)\n                  }}\n                >\n                  {isExpanded ? (\n                    <ChevronUp className=\"h-4 w-4\" />\n                  ) : (\n                    <ChevronDown className=\"h-4 w-4\" />\n                  )}\n                </Button>\n              </div>\n            </CardHeader>\n            {isExpanded && (\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {section.questions.map((question, idx) => (\n                    <div\n                      key={question.id}\n                      className=\"flex items-start gap-3 p-3 rounded-md bg-gray-50 text-sm\"\n                    >\n                      <span className=\"font-medium text-gray-500 min-w-[2rem]\">\n                        {idx + 1}.\n                      </span>\n                      <div className=\"flex-1\">\n                        <p className=\"text-gray-900\">{question.text}</p>\n                        <div className=\"flex flex-wrap gap-2 mt-2 text-xs text-gray-600\">\n                          <span className=\"bg-white px-2 py-0.5 rounded border\">\n                            Tipo: {question.type}\n                          </span>\n                          <span className=\"bg-white px-2 py-0.5 rounded border\">\n                            Peso: {question.weight}\n                          </span>\n                          {question.reference && (\n                            <span className=\"bg-white px-2 py-0.5 rounded border\">\n                              {question.reference}\n                            </span>\n                          )}\n                          {question.requiresJustification && (\n                            <span className=\"bg-orange-100 text-orange-800 px-2 py-0.5 rounded border border-orange-200\">\n                              Justificativa obrigatória\n                            </span>\n                          )}\n                          {question.requiresEvidence && (\n                            <span className=\"bg-blue-100 text-blue-800 px-2 py-0.5 rounded border border-blue-200\">\n                              Evidência obrigatória\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            )}\n          </Card>\n        )\n      })}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAAA;AALA;;;;;;AA6BO,SAAS,qBAAqB,EAAE,QAAQ,EAA6B;IAC1E,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAA0B,CAAC;IAEnF,MAAM,gBAAgB,CAAC;QACrB,oBAAoB,CAAA,OAAQ,CAAC;gBAC3B,GAAG,IAAI;gBACP,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU;YAC/B,CAAC;IACH;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAwB;;;;;;YACrC,SAAS,GAAG,CAAC,CAAC;gBACb,MAAM,aAAa,gBAAgB,CAAC,QAAQ,EAAE,CAAC,IAAI;gBACnD,MAAM,gBAAgB,GAAG,QAAQ,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,SAAS,CAAC,MAAM,KAAK,IAAI,MAAM,IAAI;gBAExG,qBACE,8OAAC,iIAAI;;sCACH,8OAAC,uIAAU;4BACT,WAAU;4BACV,SAAS,IAAM,cAAc,QAAQ,EAAE;sCAEvC,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,sIAAS;wDAAC,WAAU;;4DAClB,QAAQ,KAAK;4DAAC;4DAAG,QAAQ,KAAK;;;;;;;kEAEjC,8OAAC;wDAAK,WAAU;kEACb;;;;;;;;;;;;4CAGJ,QAAQ,WAAW,IAAI,4BACtB,8OAAC;gDAAE,WAAU;0DAA8B,QAAQ,WAAW;;;;;;;;;;;;kDAGlE,8OAAC,qIAAM;wCACL,SAAQ;wCACR,MAAK;wCACL,WAAU;wCACV,SAAS,CAAC;4CACR,EAAE,eAAe;4CACjB,cAAc,QAAQ,EAAE;wCAC1B;kDAEC,2BACC,8OAAC,6NAAS;4CAAC,WAAU;;;;;iEAErB,8OAAC,mOAAW;4CAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;wBAK9B,4BACC,8OAAC,wIAAW;sCACV,cAAA,8OAAC;gCAAI,WAAU;0CACZ,QAAQ,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,oBAChC,8OAAC;wCAEC,WAAU;;0DAEV,8OAAC;gDAAK,WAAU;;oDACb,MAAM;oDAAE;;;;;;;0DAEX,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAE,WAAU;kEAAiB,SAAS,IAAI;;;;;;kEAC3C,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAK,WAAU;;oEAAsC;oEAC7C,SAAS,IAAI;;;;;;;0EAEtB,8OAAC;gEAAK,WAAU;;oEAAsC;oEAC7C,SAAS,MAAM;;;;;;;4DAEvB,SAAS,SAAS,kBACjB,8OAAC;gEAAK,WAAU;0EACb,SAAS,SAAS;;;;;;4DAGtB,SAAS,qBAAqB,kBAC7B,8OAAC;gEAAK,WAAU;0EAA6E;;;;;;4DAI9F,SAAS,gBAAgB,kBACxB,8OAAC;gEAAK,WAAU;0EAAuE;;;;;;;;;;;;;;;;;;;uCA1BxF,SAAS,EAAE;;;;;;;;;;;;;;;;mBAzCjB,QAAQ,EAAE;;;;;YAgFzB;;;;;;;AAGN","debugId":null}}]
}