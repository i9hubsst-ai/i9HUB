{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/lib/supabase/server.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\nexport async function createClient() {\n  const cookieStore = await cookies()\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // Server Component context\n          }\n        },\n      },\n    }\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,IAAA,0IAAO;IAEjC,OAAO,IAAA,+LAAkB,sUAGvB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,2BAA2B;gBAC7B;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient({\n  log: process.env.NODE_ENV === 'development' ? ['error', 'warn'] : ['error'],\n})\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6IAAY,CAAC;IAC/D,KAAK,uCAAyC;QAAC;QAAS;KAAO,GAAG;AACpE;AAEA,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/lib/auth.ts"],"sourcesContent":["import { createClient } from '@/lib/supabase/server'\nimport { prisma } from '@/lib/prisma'\nimport { Role } from '@prisma/client'\n\nexport async function getCurrentUser() {\n  const supabase = await createClient()\n  const { data: { user }, error } = await supabase.auth.getUser()\n  \n  if (error || !user) {\n    return null\n  }\n  \n  return user\n}\n\nexport async function getUserMemberships(userId: string) {\n  return await prisma.membership.findMany({\n    where: {\n      userId,\n      status: 'ACTIVE'\n    },\n    include: {\n      company: true\n    },\n    orderBy: {\n      createdAt: 'desc'\n    }\n  })\n}\n\nexport async function isPlatformAdmin(userId: string): Promise<boolean> {\n  const admin = await prisma.platformAdmin.findUnique({\n    where: { userId }\n  })\n  return !!admin\n}\n\nexport async function getUserRole(userId: string, companyId: string): Promise<Role | null> {\n  const membership = await prisma.membership.findUnique({\n    where: {\n      userId_companyId: {\n        userId,\n        companyId\n      }\n    }\n  })\n  \n  return membership?.role ?? null\n}\n\nexport async function requireAuth() {\n  const user = await getCurrentUser()\n  if (!user) {\n    throw new Error('Unauthorized')\n  }\n  return user\n}\n\nexport async function requireRole(userId: string, companyId: string, allowedRoles: Role[]) {\n  const role = await getUserRole(userId, companyId)\n  const isAdmin = await isPlatformAdmin(userId)\n  \n  if (isAdmin) return true\n  \n  if (!role || !allowedRoles.includes(role)) {\n    throw new Error('Insufficient permissions')\n  }\n  \n  return true\n}\n\nexport async function getUserDisplayRole(userId: string): Promise<{ role: Role | 'PLATFORM_ADMIN', label: string }> {\n  // Check if user is Platform Admin first\n  const isAdmin = await isPlatformAdmin(userId)\n  \n  if (isAdmin) {\n    return {\n      role: 'PLATFORM_ADMIN',\n      label: 'Admin da Plataforma'\n    }\n  }\n  \n  // Get the user's primary membership (most recent active one)\n  const memberships = await getUserMemberships(userId)\n  \n  if (memberships.length === 0) {\n    return {\n      role: 'VIEWER',\n      label: 'Sem Acesso'\n    }\n  }\n  \n  // Use the first membership's role\n  const primaryRole = memberships[0].role\n  \n  const roleLabels: Record<Role, string> = {\n    PLATFORM_ADMIN: 'Admin da Plataforma',\n    COMPANY_ADMIN: 'Admin da Empresa',\n    ENGINEER: 'Engenheiro SST',\n    EMPLOYER: 'Empregador',\n    VIEWER: 'Visualizador'\n  }\n  \n  return {\n    role: primaryRole,\n    label: roleLabels[primaryRole]\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;;;AAGO,eAAe;IACpB,MAAM,WAAW,MAAM,IAAA,yIAAY;IACnC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAE7D,IAAI,SAAS,CAAC,MAAM;QAClB,OAAO;IACT;IAEA,OAAO;AACT;AAEO,eAAe,mBAAmB,MAAc;IACrD,OAAO,MAAM,uHAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;QACtC,OAAO;YACL;YACA,QAAQ;QACV;QACA,SAAS;YACP,SAAS;QACX;QACA,SAAS;YACP,WAAW;QACb;IACF;AACF;AAEO,eAAe,gBAAgB,MAAc;IAClD,MAAM,QAAQ,MAAM,uHAAM,CAAC,aAAa,CAAC,UAAU,CAAC;QAClD,OAAO;YAAE;QAAO;IAClB;IACA,OAAO,CAAC,CAAC;AACX;AAEO,eAAe,YAAY,MAAc,EAAE,SAAiB;IACjE,MAAM,aAAa,MAAM,uHAAM,CAAC,UAAU,CAAC,UAAU,CAAC;QACpD,OAAO;YACL,kBAAkB;gBAChB;gBACA;YACF;QACF;IACF;IAEA,OAAO,YAAY,QAAQ;AAC7B;AAEO,eAAe;IACpB,MAAM,OAAO,MAAM;IACnB,IAAI,CAAC,MAAM;QACT,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAEO,eAAe,YAAY,MAAc,EAAE,SAAiB,EAAE,YAAoB;IACvF,MAAM,OAAO,MAAM,YAAY,QAAQ;IACvC,MAAM,UAAU,MAAM,gBAAgB;IAEtC,IAAI,SAAS,OAAO;IAEpB,IAAI,CAAC,QAAQ,CAAC,aAAa,QAAQ,CAAC,OAAO;QACzC,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEO,eAAe,mBAAmB,MAAc;IACrD,wCAAwC;IACxC,MAAM,UAAU,MAAM,gBAAgB;IAEtC,IAAI,SAAS;QACX,OAAO;YACL,MAAM;YACN,OAAO;QACT;IACF;IAEA,6DAA6D;IAC7D,MAAM,cAAc,MAAM,mBAAmB;IAE7C,IAAI,YAAY,MAAM,KAAK,GAAG;QAC5B,OAAO;YACL,MAAM;YACN,OAAO;QACT;IACF;IAEA,kCAAkC;IAClC,MAAM,cAAc,WAAW,CAAC,EAAE,CAAC,IAAI;IAEvC,MAAM,aAAmC;QACvC,gBAAgB;QAChB,eAAe;QACf,UAAU;QACV,UAAU;QACV,QAAQ;IACV;IAEA,OAAO;QACL,MAAM;QACN,OAAO,UAAU,CAAC,YAAY;IAChC;AACF","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\nimport md5 from \"md5\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function getGravatarUrl(email: string, size: number = 80): string {\n  const hash = md5(email.toLowerCase().trim())\n  return `https://www.gravatar.com/avatar/${hash}?s=${size}&d=mp`\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,SAAS,eAAe,KAAa,EAAE,OAAe,EAAE;IAC7D,MAAM,OAAO,IAAA,qIAAG,EAAC,MAAM,WAAW,GAAG,IAAI;IACzC,OAAO,CAAC,gCAAgC,EAAE,KAAK,GAAG,EAAE,KAAK,KAAK,CAAC;AACjE","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n        \"icon-sm\": \"size-8\",\n        \"icon-lg\": \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/dropdown-menu.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iEACA;AAEG,MAAM,2BAA2B,IAAA,wQAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,iEACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iEACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iEACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iEACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iEACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iEACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iEACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,iEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iEACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/dropdown-menu.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6CACA;AAEG,MAAM,2BAA2B,IAAA,wQAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,6CACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6CACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6CACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6CACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6CACA;AAEG,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6CACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,6CACA;AAEG,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,6CACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,6CACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,6CACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,sBAAsB,IAAA,wQAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/avatar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0DACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0DACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/avatar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,sCACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,sCACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,sCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/actions/auth.ts"],"sourcesContent":["'use server'\n\nimport { revalidatePath } from 'next/cache'\nimport { redirect } from 'next/navigation'\nimport { createClient } from '@/lib/supabase/server'\nimport { prisma } from '@/lib/prisma'\n\nexport async function login(formData: FormData) {\n  const supabase = await createClient()\n\n  const data = {\n    email: formData.get('email') as string,\n    password: formData.get('password') as string,\n  }\n\n  const { error } = await supabase.auth.signInWithPassword(data)\n\n  if (error) {\n    return { error: error.message }\n  }\n\n  revalidatePath('/dashboard', 'layout')\n  redirect('/dashboard')\n}\n\nexport async function signup(formData: FormData) {\n  const supabase = await createClient()\n\n  const data = {\n    email: formData.get('email') as string,\n    password: formData.get('password') as string,\n    options: {\n      data: {\n        name: formData.get('name') as string,\n      },\n      emailRedirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/callback`,\n    }\n  }\n\n  const { data: authData, error } = await supabase.auth.signUp(data)\n\n  if (error) {\n    return { error: error.message }\n  }\n\n  if (authData.user) {\n    const companyName = formData.get('companyName') as string\n    const companyCnpj = formData.get('companyCnpj') as string\n\n    if (companyName && companyCnpj) {\n      try {\n        const company = await prisma.company.create({\n          data: {\n            name: companyName,\n            cnpj: companyCnpj,\n          }\n        })\n\n        await prisma.membership.create({\n          data: {\n            userId: authData.user.id,\n            companyId: company.id,\n            role: 'COMPANY_ADMIN',\n            status: 'ACTIVE',\n          }\n        })\n      } catch (err) {\n        console.error('Erro ao criar empresa:', err)\n        return { error: 'Erro ao criar empresa. Verifique se o CNPJ já não está cadastrado.' }\n      }\n    }\n  }\n\n  revalidatePath('/dashboard', 'layout')\n  redirect('/dashboard')\n}\n\nexport async function logout() {\n  const supabase = await createClient()\n  await supabase.auth.signOut()\n  revalidatePath('/', 'layout')\n  redirect('/auth/login')\n}\n\nexport async function resetPassword(formData: FormData) {\n  const supabase = await createClient()\n  const email = formData.get('email') as string\n\n  const { error } = await supabase.auth.resetPasswordForEmail(email, {\n    redirectTo: `${process.env.NEXT_PUBLIC_SITE_URL}/auth/reset-password`,\n  })\n\n  if (error) {\n    return { error: error.message }\n  }\n\n  return { success: true }\n}\n\nexport async function updatePassword(formData: FormData) {\n  const supabase = await createClient()\n  const password = formData.get('password') as string\n\n  const { error } = await supabase.auth.updateUser({\n    password: password\n  })\n\n  if (error) {\n    return { error: error.message }\n  }\n\n  revalidatePath('/', 'layout')\n  redirect('/dashboard')\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AAAA;AACA;AACA;;;;;;;AAEO,eAAe,MAAM,QAAkB;IAC5C,MAAM,WAAW,MAAM,IAAA,yIAAY;IAEnC,MAAM,OAAO;QACX,OAAO,SAAS,GAAG,CAAC;QACpB,UAAU,SAAS,GAAG,CAAC;IACzB;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,kBAAkB,CAAC;IAEzD,IAAI,OAAO;QACT,OAAO;YAAE,OAAO,MAAM,OAAO;QAAC;IAChC;IAEA,IAAA,+IAAc,EAAC,cAAc;IAC7B,IAAA,iMAAQ,EAAC;AACX;AAEO,eAAe,OAAO,QAAkB;IAC7C,MAAM,WAAW,MAAM,IAAA,yIAAY;IAEnC,MAAM,OAAO;QACX,OAAO,SAAS,GAAG,CAAC;QACpB,UAAU,SAAS,GAAG,CAAC;QACvB,SAAS;YACP,MAAM;gBACJ,MAAM,SAAS,GAAG,CAAC;YACrB;YACA,iBAAiB,sHAAoC,cAAc,CAAC;QACtE;IACF;IAEA,MAAM,EAAE,MAAM,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;IAE7D,IAAI,OAAO;QACT,OAAO;YAAE,OAAO,MAAM,OAAO;QAAC;IAChC;IAEA,IAAI,SAAS,IAAI,EAAE;QACjB,MAAM,cAAc,SAAS,GAAG,CAAC;QACjC,MAAM,cAAc,SAAS,GAAG,CAAC;QAEjC,IAAI,eAAe,aAAa;YAC9B,IAAI;gBACF,MAAM,UAAU,MAAM,uHAAM,CAAC,OAAO,CAAC,MAAM,CAAC;oBAC1C,MAAM;wBACJ,MAAM;wBACN,MAAM;oBACR;gBACF;gBAEA,MAAM,uHAAM,CAAC,UAAU,CAAC,MAAM,CAAC;oBAC7B,MAAM;wBACJ,QAAQ,SAAS,IAAI,CAAC,EAAE;wBACxB,WAAW,QAAQ,EAAE;wBACrB,MAAM;wBACN,QAAQ;oBACV;gBACF;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,0BAA0B;gBACxC,OAAO;oBAAE,OAAO;gBAAqE;YACvF;QACF;IACF;IAEA,IAAA,+IAAc,EAAC,cAAc;IAC7B,IAAA,iMAAQ,EAAC;AACX;AAEO,eAAe;IACpB,MAAM,WAAW,MAAM,IAAA,yIAAY;IACnC,MAAM,SAAS,IAAI,CAAC,OAAO;IAC3B,IAAA,+IAAc,EAAC,KAAK;IACpB,IAAA,iMAAQ,EAAC;AACX;AAEO,eAAe,cAAc,QAAkB;IACpD,MAAM,WAAW,MAAM,IAAA,yIAAY;IACnC,MAAM,QAAQ,SAAS,GAAG,CAAC;IAE3B,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,qBAAqB,CAAC,OAAO;QACjE,YAAY,sHAAoC,oBAAoB,CAAC;IACvE;IAEA,IAAI,OAAO;QACT,OAAO;YAAE,OAAO,MAAM,OAAO;QAAC;IAChC;IAEA,OAAO;QAAE,SAAS;IAAK;AACzB;AAEO,eAAe,eAAe,QAAkB;IACrD,MAAM,WAAW,MAAM,IAAA,yIAAY;IACnC,MAAM,WAAW,SAAS,GAAG,CAAC;IAE9B,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU,CAAC;QAC/C,UAAU;IACZ;IAEA,IAAI,OAAO;QACT,OAAO;YAAE,OAAO,MAAM,OAAO;QAAC;IAChC;IAEA,IAAA,+IAAc,EAAC,KAAK;IACpB,IAAA,iMAAQ,EAAC;AACX;;;IA1GsB;IAkBA;IAoDA;IAOA;IAeA;;AA5FA,+OAAA;AAkBA,+OAAA;AAoDA,+OAAA;AAOA,+OAAA;AAeA,+OAAA","debugId":null}},
    {"offset": {"line": 659, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/dashboard/user-nav.tsx"],"sourcesContent":["import { LogOut, User } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { logout } from '@/app/actions/auth'\nimport { getGravatarUrl } from '@/lib/utils'\n\ninterface UserNavProps {\n  user: {\n    email?: string\n    name?: string\n    role?: string\n  }\n}\n\nexport function UserNav({ user }: UserNavProps) {\n  const initials = user.name\n    ? user.name.split(' ').map(n => n[0]).join('').substring(0, 2).toUpperCase()\n    : user.email?.substring(0, 2).toUpperCase() || 'U'\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" className=\"relative h-10 w-10 rounded-full\">\n          <Avatar>\n            {user.email && (\n              <AvatarImage \n                src={getGravatarUrl(user.email, 80)} \n                alt={user.name || user.email} \n              />\n            )}\n            <AvatarFallback className=\"bg-accent text-accent-foreground\">\n              {initials}\n            </AvatarFallback>\n          </Avatar>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n        <DropdownMenuLabel className=\"font-normal\">\n          <div className=\"flex flex-col space-y-1\">\n            <p className=\"text-sm font-medium leading-none\">{user.name || 'Usuário'}</p>\n            <p className=\"text-xs leading-none text-muted-foreground\">\n              {user.email}\n            </p>\n            {user.role && (\n              <p className=\"text-xs font-medium text-accent mt-1\">\n                {user.role}\n              </p>\n            )}\n          </div>\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem asChild>\n          <form action={logout}>\n            <button type=\"submit\" className=\"flex w-full items-center\">\n              <LogOut className=\"mr-2 h-4 w-4\" />\n              <span>Sair</span>\n            </button>\n          </form>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAQA;AACA;AACA;;;;;;;;AAUO,SAAS,QAAQ,EAAE,IAAI,EAAgB;IAC5C,MAAM,WAAW,KAAK,IAAI,GACtB,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,SAAS,CAAC,GAAG,GAAG,WAAW,KACxE,KAAK,KAAK,EAAE,UAAU,GAAG,GAAG,iBAAiB;IAEjD,qBACE,8OAAC,qJAAY;;0BACX,8OAAC,4JAAmB;gBAAC,OAAO;0BAC1B,cAAA,8OAAC,qIAAM;oBAAC,SAAQ;oBAAQ,WAAU;8BAChC,cAAA,8OAAC,qIAAM;;4BACJ,KAAK,KAAK,kBACT,8OAAC,0IAAW;gCACV,KAAK,IAAA,8HAAc,EAAC,KAAK,KAAK,EAAE;gCAChC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK;;;;;;0CAGhC,8OAAC,6IAAc;gCAAC,WAAU;0CACvB;;;;;;;;;;;;;;;;;;;;;;0BAKT,8OAAC,4JAAmB;gBAAC,WAAU;gBAAO,OAAM;gBAAM,UAAU;;kCAC1D,8OAAC,0JAAiB;wBAAC,WAAU;kCAC3B,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAoC,KAAK,IAAI,IAAI;;;;;;8CAC9D,8OAAC;oCAAE,WAAU;8CACV,KAAK,KAAK;;;;;;gCAEZ,KAAK,IAAI,kBACR,8OAAC;oCAAE,WAAU;8CACV,KAAK,IAAI;;;;;;;;;;;;;;;;;kCAKlB,8OAAC,8JAAqB;;;;;kCACtB,8OAAC,yJAAgB;wBAAC,OAAO;kCACvB,cAAA,8OAAC;4BAAK,QAAQ,gIAAM;sCAClB,cAAA,8OAAC;gCAAO,MAAK;gCAAS,WAAU;;kDAC9B,8OAAC,oNAAM;wCAAC,WAAU;;;;;;kDAClB,8OAAC;kDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOpB","debugId":null}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/dashboard/layout.tsx"],"sourcesContent":["import { Building2, LayoutDashboard, BarChart3, FileText, Users, Bot, UserCog, Layers } from 'lucide-react'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { getCurrentUser, getUserDisplayRole } from '@/lib/auth'\nimport { UserNav } from '@/components/dashboard/user-nav'\nimport { redirect } from 'next/navigation'\n\nexport default async function DashboardLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  const user = await getCurrentUser()\n\n  if (!user) {\n    redirect('/auth/login')\n  }\n\n  const userRole = await getUserDisplayRole(user.id)\n\n  const menuItems = [\n    { icon: LayoutDashboard, label: 'Dashboard', href: '/dashboard' },\n    { icon: BarChart3, label: 'Diagnósticos', href: '/dashboard/diagnostics' },\n    { icon: Layers, label: 'Templates', href: '/dashboard/templates' },\n    { icon: FileText, label: 'Planos de Ação', href: '/dashboard/actions' },\n    { icon: Building2, label: 'Empresas', href: '/dashboard/companies' },\n    { icon: Users, label: 'Usuários', href: '/dashboard/users' },\n    { icon: UserCog, label: 'Funcionários', href: '/dashboard/employees' },\n  ]\n\n  return (\n    <div className=\"min-h-screen bg-background flex\">\n      {/* Sidebar */}\n      <aside className=\"w-64 bg-sidebar text-sidebar-foreground flex flex-col\">\n        <div className=\"p-6 border-b border-sidebar-border\">\n          <Link href=\"/dashboard\" className=\"flex items-center gap-3\">\n            <Image\n              src=\"/images/hubsst-logo.png\"\n              alt=\"HUBSST\"\n              width={40}\n              height={40}\n              className=\"brightness-0 invert\"\n            />\n            <span className=\"font-bold text-xl\">HUBSST</span>\n          </Link>\n        </div>\n\n        <nav className=\"flex-1 p-4 space-y-2\">\n          {menuItems.map((item) => {\n            const Icon = item.icon\n            return (\n              <Link\n                key={item.href}\n                href={item.href}\n                className=\"flex items-center gap-3 px-4 py-3 rounded-lg hover:bg-sidebar-accent transition-colors\"\n              >\n                <Icon className=\"h-5 w-5\" />\n                <span>{item.label}</span>\n              </Link>\n            )\n          })}\n        </nav>\n\n        <div className=\"p-4 border-t border-sidebar-border\">\n          <button className=\"flex items-center gap-3 px-4 py-3 w-full rounded-lg bg-accent hover:bg-accent/90 text-accent-foreground transition-colors\">\n            <Bot className=\"h-5 w-5\" />\n            <span className=\"font-medium\">Assistente IA</span>\n          </button>\n        </div>\n      </aside>\n\n      {/* Main Content */}\n      <main className=\"flex-1 flex flex-col\">\n        {/* Top Header */}\n        <header className=\"h-16 border-b bg-card flex items-center justify-end px-6\">\n          <UserNav user={{ \n            email: user.email!, \n            name: user.user_metadata?.name,\n            role: userRole.label \n          }} />\n        </header>\n        \n        {/* Page Content */}\n        <div className=\"flex-1 overflow-auto\">\n          {children}\n        </div>\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AAEe,eAAe,gBAAgB,EAC5C,QAAQ,EAGT;IACC,MAAM,OAAO,MAAM,IAAA,6HAAc;IAEjC,IAAI,CAAC,MAAM;QACT,IAAA,iMAAQ,EAAC;IACX;IAEA,MAAM,WAAW,MAAM,IAAA,iIAAkB,EAAC,KAAK,EAAE;IAEjD,MAAM,YAAY;QAChB;YAAE,MAAM,+OAAe;YAAE,OAAO;YAAa,MAAM;QAAa;QAChE;YAAE,MAAM,+NAAS;YAAE,OAAO;YAAgB,MAAM;QAAyB;QACzE;YAAE,MAAM,gNAAM;YAAE,OAAO;YAAa,MAAM;QAAuB;QACjE;YAAE,MAAM,0NAAQ;YAAE,OAAO;YAAkB,MAAM;QAAqB;QACtE;YAAE,MAAM,6NAAS;YAAE,OAAO;YAAY,MAAM;QAAuB;QACnE;YAAE,MAAM,6MAAK;YAAE,OAAO;YAAY,MAAM;QAAmB;QAC3D;YAAE,MAAM,uNAAO;YAAE,OAAO;YAAgB,MAAM;QAAuB;KACtE;IAED,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAM,WAAU;;kCACf,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,uKAAI;4BAAC,MAAK;4BAAa,WAAU;;8CAChC,8OAAC,wIAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;8CAEZ,8OAAC;oCAAK,WAAU;8CAAoB;;;;;;;;;;;;;;;;;kCAIxC,8OAAC;wBAAI,WAAU;kCACZ,UAAU,GAAG,CAAC,CAAC;4BACd,MAAM,OAAO,KAAK,IAAI;4BACtB,qBACE,8OAAC,uKAAI;gCAEH,MAAM,KAAK,IAAI;gCACf,WAAU;;kDAEV,8OAAC;wCAAK,WAAU;;;;;;kDAChB,8OAAC;kDAAM,KAAK,KAAK;;;;;;;+BALZ,KAAK,IAAI;;;;;wBAQpB;;;;;;kCAGF,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAO,WAAU;;8CAChB,8OAAC,uMAAG;oCAAC,WAAU;;;;;;8CACf,8OAAC;oCAAK,WAAU;8CAAc;;;;;;;;;;;;;;;;;;;;;;;0BAMpC,8OAAC;gBAAK,WAAU;;kCAEd,8OAAC;wBAAO,WAAU;kCAChB,cAAA,8OAAC,kJAAO;4BAAC,MAAM;gCACb,OAAO,KAAK,KAAK;gCACjB,MAAM,KAAK,aAAa,EAAE;gCAC1B,MAAM,SAAS,KAAK;4BACtB;;;;;;;;;;;kCAIF,8OAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;;;;;;;AAKX","debugId":null}}]
}