// Teste espec√≠fico: adicionar nome MA.IA e verificar se funciona
const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function testMAIAName() {
  console.log('ü§ñ TESTE: ADICIONANDO NOME MA.IA')
  console.log('===============================\n')
  
  try {
    // 1. Adicionar instru√ß√£o sobre o nome
    console.log('1Ô∏è‚É£ Adicionando instru√ß√£o sobre o nome...')
    
    // Buscar configura√ß√£o atual
    const currentConfig = await prisma.aIConfiguration.findFirst({
      where: { isActive: true }
    })
    
    let existingPrompt = currentConfig?.systemPrompt || ""
    const nameInstruction = "- O seu nome √© MA.IA (M√°quina de An√°lise de Intelig√™ncia Artificial)"
    
    const updatedPrompt = existingPrompt.trim() 
      ? `${existingPrompt}\n${nameInstruction}`
      : nameInstruction
    
    // Desativar configura√ß√£o atual
    await prisma.aIConfiguration.updateMany({
      where: { isActive: true },
      data: { isActive: false }
    })
    
    // Criar nova configura√ß√£o
    const newConfig = await prisma.aIConfiguration.create({
      data: {
        systemPrompt: updatedPrompt,
        temperature: currentConfig?.temperature || 0.7,
        maxTokens: currentConfig?.maxTokens || 2000,
        isActive: true,
        updatedBy: 'test-maia'
      }
    })
    
    console.log('‚úÖ Instru√ß√£o adicionada com sucesso!')
    console.log(`Nova configura√ß√£o ID: ${newConfig.id}`)
    
    // 2. Verificar o prompt completo
    console.log('\n2Ô∏è‚É£ Verificando prompt completo...')
    console.log('üìã PROMPT PERSONALIZADO ATUAL:')
    console.log('```')
    console.log(newConfig.systemPrompt)
    console.log('```')
    
    // 3. Simular como o prompt seria enviado para a IA
    console.log('\n3Ô∏è‚É£ Simulando prompt completo enviado para IA...')
    
    const baseSystemPrompt = `Voc√™ √© um assistente especializado em Seguran√ßa e Sa√∫de do Trabalho (SST),
com profundo conhecimento das normas regulamentadoras brasileiras (NRs),
ISO 45001 e melhores pr√°ticas do setor.

DIRETRIZES B√ÅSICAS:
- Base suas respostas no conhecimento espec√≠fico das NRs brasileiras
- Cite as normas relevantes (ex: "Conforme NR-12, item 12.38...")
- Seja t√©cnico e preciso
- Use terminologia oficial das normas
- Se n√£o tiver certeza sobre algo espec√≠fico, mencione que precisa consultar a norma completa`

    const fullSystemPrompt = baseSystemPrompt + `

INSTRU√á√ïES ADICIONAIS DO ADMINISTRADOR:
${newConfig.systemPrompt.trim()}`

    const testQuestion = "Qual √© o seu nome?"
    const finalPrompt = `${fullSystemPrompt}

Pergunta do usu√°rio: ${testQuestion}`

    console.log('üéØ PROMPT FINAL COMPLETO:')
    console.log('=' * 50)
    console.log(finalPrompt)
    console.log('=' * 50)
    
    // 4. Verificar se a instru√ß√£o sobre nome est√° presente
    console.log('\n4Ô∏è‚É£ Verifica√ß√£o de presen√ßa da instru√ß√£o...')
    
    if (finalPrompt.includes('MA.IA')) {
      console.log('‚úÖ SUCESSO: Instru√ß√£o sobre nome MA.IA encontrada no prompt!')
      console.log('‚úÖ A IA deveria responder que seu nome √© MA.IA')
    } else {
      console.log('‚ùå ERRO: Instru√ß√£o sobre nome n√£o encontrada no prompt')
    }
    
    if (finalPrompt.includes('M√°quina de An√°lise de Intelig√™ncia Artificial')) {
      console.log('‚úÖ SUCESSO: Descri√ß√£o completa do nome encontrada!')
    }
    
    console.log('\nüß™ TESTE DE RESPOSTA ESPERADA:')
    console.log('===============================')
    console.log('Pergunta: "Qual √© o seu nome?"')
    console.log('Resposta esperada: Deve mencionar "MA.IA" e possivelmente a descri√ß√£o completa')
    
    console.log('\nüí° PARA TESTAR NO CHAT REAL:')
    console.log('1. Acesse http://localhost:3000/dashboard')
    console.log('2. Fa√ßa uma pergunta: "Qual √© o seu nome?"')
    console.log('3. A IA deve responder mencionando MA.IA')
    
  } catch (error) {
    console.error('‚ùå ERRO:', error)
  } finally {
    await prisma.$disconnect()
  }
}

testMAIAName()