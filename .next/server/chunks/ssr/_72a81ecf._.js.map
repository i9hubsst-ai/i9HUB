{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n        \"icon-sm\": \"size-8\",\n        \"icon-lg\": \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,0KAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,6KAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,8OAAC,4KAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,6KAAuB;QACtB,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OAGJ;IACC,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,6KAAuB;gBACtB,aAAU;gBACV,WAAW,IAAA,kHAAE,EACX,+WACA;gBAED,GAAG,KAAK;;oBAER;oBACA,iCACC,8OAAC,2KAAqB;wBACpB,aAAU;wBACV,WAAU;;0CAEV,8OAAC,yMAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,2KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,iLAA2B;QAC1B,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,8bACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,yKAAmB;QAClB,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  align = \"center\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        align={align}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,0KAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,OAAO,SAAS,EAChB,QAAQ,EACR,GAAG,OAGJ;IACC,qBACE,8OAAC,6KAAuB;QACtB,aAAU;QACV,aAAW;QACX,WAAW,IAAA,kHAAE,EACX,gzBACA;QAED,GAAG,KAAK;;YAER;0BACD,8OAAC,0KAAoB;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,2OAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,WAAW,QAAQ,EACnB,QAAQ,QAAQ,EAChB,GAAG,OACkD;IACrD,qBACE,8OAAC,4KAAsB;kBACrB,cAAA,8OAAC,6KAAuB;YACtB,aAAU;YACV,WAAW,IAAA,kHAAE,EACX,ijBACA,aAAa,YACX,mIACF;YAEF,UAAU;YACV,OAAO;YACN,GAAG,KAAK;;8BAET,8OAAC;;;;;8BACD,8OAAC,8KAAwB;oBACvB,WAAW,IAAA,kHAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,8OAAC;;;;;;;;;;;;;;;;AAIT;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,2KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OAC+C;IAClD,qBACE,8OAAC,0KAAoB;QACnB,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,6aACA;QAED,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,mLAA6B;8BAC5B,cAAA,8OAAC,qNAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,8OAAC,8KAAwB;0BAAE;;;;;;;;;;;;AAGjC;AAEA,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACoD;IACvD,qBACE,8OAAC,+KAAyB;QACxB,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,iDAAiD;QAC9D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,qBAAqB,EAC5B,SAAS,EACT,GAAG,OACyD;IAC5D,qBACE,8OAAC,oLAA8B;QAC7B,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qOAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,8OAAC,sLAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,2OAAe;YAAC,WAAU;;;;;;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/actions/employees.ts"],"sourcesContent":["'use server'\n\nimport { revalidatePath } from 'next/cache'\nimport { prisma } from '@/lib/prisma'\nimport { getCurrentUser, isPlatformAdmin, getUserRole } from '@/lib/auth'\nimport type { Gender, MaritalStatus, ContractType, MembershipStatus } from '@prisma/client'\n\nexport type EmployeeFormData = {\n  companyId: string\n  fullName: string\n  cpf: string\n  birthDate: string\n  gender?: Gender\n  maritalStatus?: MaritalStatus\n  nationality?: string\n  email: string\n  phone?: string\n  emergencyContactName?: string\n  emergencyContactPhone?: string\n  employeeNumber: string\n  admissionDate: string\n  contractType: ContractType\n  workSchedule?: string\n  unit?: string\n  department?: string\n  position: string\n  cboCode?: string\n  supervisor?: string\n  status?: MembershipStatus\n}\n\nexport async function createEmployee(data: EmployeeFormData) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  try {\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, data.companyId)\n\n    if (!isAdmin && role !== 'COMPANY_ADMIN') {\n      return { error: 'Sem permissão para cadastrar funcionários' }\n    }\n\n    const employee = await prisma.employee.create({\n      data: {\n        companyId: data.companyId,\n        fullName: data.fullName,\n        cpf: data.cpf.replace(/\\D/g, ''),\n        birthDate: new Date(data.birthDate),\n        gender: data.gender,\n        maritalStatus: data.maritalStatus,\n        nationality: data.nationality || 'Brasileira',\n        email: data.email,\n        phone: data.phone,\n        emergencyContactName: data.emergencyContactName,\n        emergencyContactPhone: data.emergencyContactPhone,\n        employeeNumber: data.employeeNumber,\n        admissionDate: new Date(data.admissionDate),\n        contractType: data.contractType,\n        workSchedule: data.workSchedule,\n        unit: data.unit,\n        department: data.department,\n        position: data.position,\n        cboCode: data.cboCode,\n        supervisor: data.supervisor,\n        status: data.status || 'ACTIVE',\n      },\n    })\n\n    revalidatePath('/dashboard/employees')\n    revalidatePath(`/dashboard/companies/${data.companyId}`)\n    return { success: true, employee }\n  } catch (error: any) {\n    console.error('Erro ao criar funcionário:', error)\n    \n    if (error.code === 'P2002') {\n      if (error.meta?.target?.includes('cpf')) {\n        return { error: 'CPF já cadastrado nesta empresa' }\n      }\n      if (error.meta?.target?.includes('employeeNumber')) {\n        return { error: 'Matrícula já cadastrada nesta empresa' }\n      }\n    }\n    \n    return { error: 'Erro ao cadastrar funcionário' }\n  }\n}\n\nexport async function updateEmployee(id: string, data: EmployeeFormData) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  try {\n    const employee = await prisma.employee.findUnique({\n      where: { id },\n    })\n\n    if (!employee) {\n      return { error: 'Funcionário não encontrado' }\n    }\n\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, employee.companyId)\n\n    if (!isAdmin && role !== 'COMPANY_ADMIN') {\n      return { error: 'Sem permissão para editar funcionários' }\n    }\n\n    const updated = await prisma.employee.update({\n      where: { id },\n      data: {\n        fullName: data.fullName,\n        cpf: data.cpf.replace(/\\D/g, ''),\n        birthDate: new Date(data.birthDate),\n        gender: data.gender,\n        maritalStatus: data.maritalStatus,\n        nationality: data.nationality || 'Brasileira',\n        email: data.email,\n        phone: data.phone,\n        emergencyContactName: data.emergencyContactName,\n        emergencyContactPhone: data.emergencyContactPhone,\n        employeeNumber: data.employeeNumber,\n        admissionDate: new Date(data.admissionDate),\n        contractType: data.contractType,\n        workSchedule: data.workSchedule,\n        unit: data.unit,\n        department: data.department,\n        position: data.position,\n        cboCode: data.cboCode,\n        supervisor: data.supervisor,\n        status: data.status || 'ACTIVE',\n      },\n    })\n\n    revalidatePath('/dashboard/employees')\n    revalidatePath(`/dashboard/companies/${employee.companyId}`)\n    return { success: true, employee: updated }\n  } catch (error: any) {\n    console.error('Erro ao atualizar funcionário:', error)\n    \n    if (error.code === 'P2002') {\n      if (error.meta?.target?.includes('cpf')) {\n        return { error: 'CPF já cadastrado nesta empresa' }\n      }\n      if (error.meta?.target?.includes('employeeNumber')) {\n        return { error: 'Matrícula já cadastrada nesta empresa' }\n      }\n    }\n    \n    return { error: 'Erro ao atualizar funcionário' }\n  }\n}\n\nexport async function deleteEmployee(id: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  try {\n    const employee = await prisma.employee.findUnique({\n      where: { id },\n    })\n\n    if (!employee) {\n      return { error: 'Funcionário não encontrado' }\n    }\n\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, employee.companyId)\n\n    if (!isAdmin && role !== 'COMPANY_ADMIN') {\n      return { error: 'Sem permissão para excluir funcionários' }\n    }\n\n    await prisma.employee.delete({\n      where: { id },\n    })\n\n    revalidatePath('/dashboard/employees')\n    revalidatePath(`/dashboard/companies/${employee.companyId}`)\n    return { success: true }\n  } catch (error) {\n    console.error('Erro ao excluir funcionário:', error)\n    return { error: 'Erro ao excluir funcionário' }\n  }\n}\n\nexport async function getEmployees(companyId?: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado', employees: [] }\n  }\n\n  try {\n    const isAdmin = await isPlatformAdmin(user.id)\n\n    let employees\n\n    if (isAdmin && !companyId) {\n      employees = await prisma.employee.findMany({\n        include: {\n          company: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n        orderBy: {\n          fullName: 'asc',\n        },\n      })\n    } else if (companyId) {\n      const role = await getUserRole(user.id, companyId)\n      if (!isAdmin && !role) {\n        return { error: 'Sem permissão para visualizar funcionários', employees: [] }\n      }\n\n      employees = await prisma.employee.findMany({\n        where: {\n          companyId,\n        },\n        include: {\n          company: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n        orderBy: {\n          fullName: 'asc',\n        },\n      })\n    } else {\n      const memberships = await prisma.membership.findMany({\n        where: {\n          userId: user.id,\n          status: 'ACTIVE',\n        },\n        select: {\n          companyId: true,\n        },\n      })\n\n      const companyIds = memberships.map(m => m.companyId)\n\n      employees = await prisma.employee.findMany({\n        where: {\n          companyId: {\n            in: companyIds,\n          },\n        },\n        include: {\n          company: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n        orderBy: {\n          fullName: 'asc',\n        },\n      })\n    }\n\n    return { employees }\n  } catch (error) {\n    console.error('Erro ao buscar funcionários:', error)\n    return { error: 'Erro ao buscar funcionários', employees: [] }\n  }\n}\n\nexport async function getEmployeeById(id: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado', employee: null }\n  }\n\n  try {\n    const employee = await prisma.employee.findUnique({\n      where: { id },\n      include: {\n        company: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n      },\n    })\n\n    if (!employee) {\n      return { error: 'Funcionário não encontrado', employee: null }\n    }\n\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, employee.companyId)\n\n    if (!isAdmin && !role) {\n      return { error: 'Sem permissão para visualizar este funcionário', employee: null }\n    }\n\n    return { employee }\n  } catch (error) {\n    console.error('Erro ao buscar funcionário:', error)\n    return { error: 'Erro ao buscar funcionário', employee: null }\n  }\n}\n"],"names":[],"mappings":";;;;;;;IA+BsB,iBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/lib/utils/validators.ts"],"sourcesContent":["// Validation utilities for Brazilian documents and formats\n\nexport function validateCPF(cpf: string): boolean {\n  cpf = cpf.replace(/\\D/g, '')\n  \n  if (cpf.length !== 11) return false\n  if (/^(\\d)\\1{10}$/.test(cpf)) return false // All same digits\n\n  let sum = 0\n  for (let i = 0; i < 9; i++) {\n    sum += parseInt(cpf.charAt(i)) * (10 - i)\n  }\n  let checkDigit1 = 11 - (sum % 11)\n  if (checkDigit1 >= 10) checkDigit1 = 0\n\n  if (checkDigit1 !== parseInt(cpf.charAt(9))) return false\n\n  sum = 0\n  for (let i = 0; i < 10; i++) {\n    sum += parseInt(cpf.charAt(i)) * (11 - i)\n  }\n  let checkDigit2 = 11 - (sum % 11)\n  if (checkDigit2 >= 10) checkDigit2 = 0\n\n  return checkDigit2 === parseInt(cpf.charAt(10))\n}\n\nexport function formatCPF(cpf: string): string {\n  cpf = cpf.replace(/\\D/g, '')\n  if (cpf.length <= 11) {\n    cpf = cpf.replace(/(\\d{3})(\\d)/, '$1.$2')\n    cpf = cpf.replace(/(\\d{3})(\\d)/, '$1.$2')\n    cpf = cpf.replace(/(\\d{3})(\\d{1,2})$/, '$1-$2')\n  }\n  return cpf\n}\n\nexport function formatPhone(phone: string): string {\n  phone = phone.replace(/\\D/g, '')\n  if (phone.length <= 10) {\n    phone = phone.replace(/(\\d{2})(\\d)/, '($1) $2')\n    phone = phone.replace(/(\\d{4})(\\d)/, '$1-$2')\n  } else {\n    phone = phone.replace(/(\\d{2})(\\d)/, '($1) $2')\n    phone = phone.replace(/(\\d{5})(\\d)/, '$1-$2')\n  }\n  return phone\n}\n"],"names":[],"mappings":"AAAA,2DAA2D;;;;;;;;;AAEpD,SAAS,YAAY,GAAW;IACrC,MAAM,IAAI,OAAO,CAAC,OAAO;IAEzB,IAAI,IAAI,MAAM,KAAK,IAAI,OAAO;IAC9B,IAAI,eAAe,IAAI,CAAC,MAAM,OAAO,MAAM,kBAAkB;;IAE7D,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;QAC1B,OAAO,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1C;IACA,IAAI,cAAc,KAAM,MAAM;IAC9B,IAAI,eAAe,IAAI,cAAc;IAErC,IAAI,gBAAgB,SAAS,IAAI,MAAM,CAAC,KAAK,OAAO;IAEpD,MAAM;IACN,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;QAC3B,OAAO,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IAC1C;IACA,IAAI,cAAc,KAAM,MAAM;IAC9B,IAAI,eAAe,IAAI,cAAc;IAErC,OAAO,gBAAgB,SAAS,IAAI,MAAM,CAAC;AAC7C;AAEO,SAAS,UAAU,GAAW;IACnC,MAAM,IAAI,OAAO,CAAC,OAAO;IACzB,IAAI,IAAI,MAAM,IAAI,IAAI;QACpB,MAAM,IAAI,OAAO,CAAC,eAAe;QACjC,MAAM,IAAI,OAAO,CAAC,eAAe;QACjC,MAAM,IAAI,OAAO,CAAC,qBAAqB;IACzC;IACA,OAAO;AACT;AAEO,SAAS,YAAY,KAAa;IACvC,QAAQ,MAAM,OAAO,CAAC,OAAO;IAC7B,IAAI,MAAM,MAAM,IAAI,IAAI;QACtB,QAAQ,MAAM,OAAO,CAAC,eAAe;QACrC,QAAQ,MAAM,OAAO,CAAC,eAAe;IACvC,OAAO;QACL,QAAQ,MAAM,OAAO,CAAC,eAAe;QACrC,QAAQ,MAAM,OAAO,CAAC,eAAe;IACvC;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/dashboard/add-employee-dialog.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { UserPlus, Loader2 } from 'lucide-react'\nimport { createEmployee, type EmployeeFormData } from '@/app/actions/employees'\nimport { validateCPF, formatCPF, formatPhone } from '@/lib/utils/validators'\nimport type { Company } from '@prisma/client'\n\ninterface AddEmployeeDialogProps {\n  companies: Company[]\n}\n\nexport function AddEmployeeDialog({ companies }: AddEmployeeDialogProps) {\n  const [open, setOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [formData, setFormData] = useState<Partial<EmployeeFormData>>({\n    nationality: 'Brasileira',\n    status: 'ACTIVE'\n  })\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError('')\n    setLoading(true)\n\n    // Validate required fields\n    if (!formData.companyId || !formData.fullName || !formData.cpf || \n        !formData.birthDate || !formData.email || !formData.employeeNumber ||\n        !formData.admissionDate || !formData.contractType || !formData.position) {\n      setError('Preencha todos os campos obrigatórios')\n      setLoading(false)\n      return\n    }\n\n    // Validate CPF\n    if (!validateCPF(formData.cpf)) {\n      setError('CPF inválido')\n      setLoading(false)\n      return\n    }\n\n    const result = await createEmployee(formData as EmployeeFormData)\n\n    if (result.error) {\n      setError(result.error)\n      setLoading(false)\n    } else {\n      setOpen(false)\n      setFormData({ nationality: 'Brasileira', status: 'ACTIVE' })\n      setLoading(false)\n    }\n  }\n\n  const updateField = (field: keyof EmployeeFormData, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button>\n          <UserPlus className=\"h-4 w-4 mr-2\" />\n          Cadastrar Funcionário\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"max-w-3xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Cadastrar Novo Funcionário</DialogTitle>\n          <DialogDescription>\n            Preencha as informações completas do colaborador\n          </DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"space-y-6 py-4\">\n            {/* Company Selection */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"company\">Empresa *</Label>\n              <Select\n                value={formData.companyId}\n                onValueChange={(value) => updateField('companyId', value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Selecione a empresa\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {companies.map((company) => (\n                    <SelectItem key={company.id} value={company.id}>\n                      {company.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* Identificação Civil */}\n            <div className=\"border-t pt-4\">\n              <h3 className=\"font-semibold mb-4\">Identificação Civil</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"col-span-2 space-y-2\">\n                  <Label htmlFor=\"fullName\">Nome Completo *</Label>\n                  <Input\n                    id=\"fullName\"\n                    value={formData.fullName || ''}\n                    onChange={(e) => updateField('fullName', e.target.value)}\n                    placeholder=\"Nome completo do funcionário\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"cpf\">CPF *</Label>\n                  <Input\n                    id=\"cpf\"\n                    value={formData.cpf || ''}\n                    onChange={(e) => updateField('cpf', formatCPF(e.target.value))}\n                    placeholder=\"000.000.000-00\"\n                    maxLength={14}\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"birthDate\">Data de Nascimento *</Label>\n                  <Input\n                    id=\"birthDate\"\n                    type=\"date\"\n                    value={formData.birthDate || ''}\n                    onChange={(e) => updateField('birthDate', e.target.value)}\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"gender\">Sexo</Label>\n                  <Select\n                    value={formData.gender}\n                    onValueChange={(value: any) => updateField('gender', value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Selecione\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"MALE\">Masculino</SelectItem>\n                      <SelectItem value=\"FEMALE\">Feminino</SelectItem>\n                      <SelectItem value=\"OTHER\">Outro</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"maritalStatus\">Estado Civil</Label>\n                  <Select\n                    value={formData.maritalStatus}\n                    onValueChange={(value: any) => updateField('maritalStatus', value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Selecione\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"SINGLE\">Solteiro(a)</SelectItem>\n                      <SelectItem value=\"MARRIED\">Casado(a)</SelectItem>\n                      <SelectItem value=\"DIVORCED\">Divorciado(a)</SelectItem>\n                      <SelectItem value=\"WIDOWED\">Viúvo(a)</SelectItem>\n                      <SelectItem value=\"OTHER\">Outro</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"col-span-2 space-y-2\">\n                  <Label htmlFor=\"nationality\">Nacionalidade</Label>\n                  <Input\n                    id=\"nationality\"\n                    value={formData.nationality || 'Brasileira'}\n                    onChange={(e) => updateField('nationality', e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Contato */}\n            <div className=\"border-t pt-4\">\n              <h3 className=\"font-semibold mb-4\">Contato</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"email\">E-mail *</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={formData.email || ''}\n                    onChange={(e) => updateField('email', e.target.value)}\n                    placeholder=\"email@exemplo.com\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"phone\">Telefone</Label>\n                  <Input\n                    id=\"phone\"\n                    value={formData.phone || ''}\n                    onChange={(e) => updateField('phone', formatPhone(e.target.value))}\n                    placeholder=\"(00) 00000-0000\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"emergencyContactName\">Nome do Contato de Emergência</Label>\n                  <Input\n                    id=\"emergencyContactName\"\n                    value={formData.emergencyContactName || ''}\n                    onChange={(e) => updateField('emergencyContactName', e.target.value)}\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"emergencyContactPhone\">Telefone de Emergência</Label>\n                  <Input\n                    id=\"emergencyContactPhone\"\n                    value={formData.emergencyContactPhone || ''}\n                    onChange={(e) => updateField('emergencyContactPhone', formatPhone(e.target.value))}\n                    placeholder=\"(00) 00000-0000\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Vínculo Trabalhista */}\n            <div className=\"border-t pt-4\">\n              <h3 className=\"font-semibold mb-4\">Vínculo Trabalhista</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"employeeNumber\">Matrícula *</Label>\n                  <Input\n                    id=\"employeeNumber\"\n                    value={formData.employeeNumber || ''}\n                    onChange={(e) => updateField('employeeNumber', e.target.value)}\n                    placeholder=\"Matrícula interna\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"admissionDate\">Data de Admissão *</Label>\n                  <Input\n                    id=\"admissionDate\"\n                    type=\"date\"\n                    value={formData.admissionDate || ''}\n                    onChange={(e) => updateField('admissionDate', e.target.value)}\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"contractType\">Tipo de Contrato *</Label>\n                  <Select\n                    value={formData.contractType}\n                    onValueChange={(value: any) => updateField('contractType', value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Selecione\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"CLT\">CLT</SelectItem>\n                      <SelectItem value=\"INTERN\">Estágio</SelectItem>\n                      <SelectItem value=\"OUTSOURCED\">Terceirizado</SelectItem>\n                      <SelectItem value=\"TEMPORARY\">Temporário</SelectItem>\n                      <SelectItem value=\"AUTONOMOUS\">Autônomo</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"workSchedule\">Jornada/Turno</Label>\n                  <Input\n                    id=\"workSchedule\"\n                    value={formData.workSchedule || ''}\n                    onChange={(e) => updateField('workSchedule', e.target.value)}\n                    placeholder=\"Ex: 8h às 17h\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"unit\">Unidade/Obra</Label>\n                  <Input\n                    id=\"unit\"\n                    value={formData.unit || ''}\n                    onChange={(e) => updateField('unit', e.target.value)}\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"department\">Setor/Área</Label>\n                  <Input\n                    id=\"department\"\n                    value={formData.department || ''}\n                    onChange={(e) => updateField('department', e.target.value)}\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"position\">Cargo/Função *</Label>\n                  <Input\n                    id=\"position\"\n                    value={formData.position || ''}\n                    onChange={(e) => updateField('position', e.target.value)}\n                    placeholder=\"Cargo do funcionário\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"cboCode\">Código CBO</Label>\n                  <Input\n                    id=\"cboCode\"\n                    value={formData.cboCode || ''}\n                    onChange={(e) => updateField('cboCode', e.target.value)}\n                    placeholder=\"0000-00\"\n                  />\n                </div>\n\n                <div className=\"col-span-2 space-y-2\">\n                  <Label htmlFor=\"supervisor\">Superior Imediato</Label>\n                  <Input\n                    id=\"supervisor\"\n                    value={formData.supervisor || ''}\n                    onChange={(e) => updateField('supervisor', e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"text-sm text-destructive bg-destructive/10 p-3 rounded-md mb-4\">\n              {error}\n            </div>\n          )}\n\n          <DialogFooter>\n            <Button type=\"button\" variant=\"outline\" onClick={() => setOpen(false)} disabled={loading}>\n              Cancelar\n            </Button>\n            <Button type=\"submit\" disabled={loading}>\n              {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n              Cadastrar\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1606, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-2 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,4JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1708, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,kHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 1750, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction AlertDialog({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />\n}\n\nfunction AlertDialogTrigger({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\n  return (\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n  )\n}\n\nfunction AlertDialogPortal({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\n  return (\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n  )\n}\n\nfunction AlertDialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      />\n    </AlertDialogPortal>\n  )\n}\n\nfunction AlertDialogHeader({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogFooter({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogAction({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\n  return (\n    <AlertDialogPrimitive.Action\n      className={cn(buttonVariants(), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogCancel({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAEA;AACA;AANA;;;;;AAQA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,8OAAC,mLAAyB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,mBAAmB,EAC1B,GAAG,OACuD;IAC1D,qBACE,8OAAC,sLAA4B;QAAC,aAAU;QAAwB,GAAG,KAAK;;;;;;AAE5E;AAEA,SAAS,kBAAkB,EACzB,GAAG,OACsD;IACzD,qBACE,8OAAC,qLAA2B;QAAC,aAAU;QAAuB,GAAG,KAAK;;;;;;AAE1E;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC,sLAA4B;QAC3B,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,sLAA4B;gBAC3B,aAAU;gBACV,WAAW,IAAA,kHAAE,EACX,+WACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIjB;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACqD;IACxD,qBACE,8OAAC,oLAA0B;QACzB,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,8OAAC,0LAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,qLAA2B;QAC1B,WAAW,IAAA,kHAAE,EAAC,IAAA,6IAAc,KAAI;QAC/B,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,qLAA2B;QAC1B,WAAW,IAAA,kHAAE,EAAC,IAAA,6IAAc,EAAC;YAAE,SAAS;QAAU,IAAI;QACrD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1919, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/actions/employees.ts"],"sourcesContent":["'use server'\n\nimport { revalidatePath } from 'next/cache'\nimport { prisma } from '@/lib/prisma'\nimport { getCurrentUser, isPlatformAdmin, getUserRole } from '@/lib/auth'\nimport type { Gender, MaritalStatus, ContractType, MembershipStatus } from '@prisma/client'\n\nexport type EmployeeFormData = {\n  companyId: string\n  fullName: string\n  cpf: string\n  birthDate: string\n  gender?: Gender\n  maritalStatus?: MaritalStatus\n  nationality?: string\n  email: string\n  phone?: string\n  emergencyContactName?: string\n  emergencyContactPhone?: string\n  employeeNumber: string\n  admissionDate: string\n  contractType: ContractType\n  workSchedule?: string\n  unit?: string\n  department?: string\n  position: string\n  cboCode?: string\n  supervisor?: string\n  status?: MembershipStatus\n}\n\nexport async function createEmployee(data: EmployeeFormData) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  try {\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, data.companyId)\n\n    if (!isAdmin && role !== 'COMPANY_ADMIN') {\n      return { error: 'Sem permissão para cadastrar funcionários' }\n    }\n\n    const employee = await prisma.employee.create({\n      data: {\n        companyId: data.companyId,\n        fullName: data.fullName,\n        cpf: data.cpf.replace(/\\D/g, ''),\n        birthDate: new Date(data.birthDate),\n        gender: data.gender,\n        maritalStatus: data.maritalStatus,\n        nationality: data.nationality || 'Brasileira',\n        email: data.email,\n        phone: data.phone,\n        emergencyContactName: data.emergencyContactName,\n        emergencyContactPhone: data.emergencyContactPhone,\n        employeeNumber: data.employeeNumber,\n        admissionDate: new Date(data.admissionDate),\n        contractType: data.contractType,\n        workSchedule: data.workSchedule,\n        unit: data.unit,\n        department: data.department,\n        position: data.position,\n        cboCode: data.cboCode,\n        supervisor: data.supervisor,\n        status: data.status || 'ACTIVE',\n      },\n    })\n\n    revalidatePath('/dashboard/employees')\n    revalidatePath(`/dashboard/companies/${data.companyId}`)\n    return { success: true, employee }\n  } catch (error: any) {\n    console.error('Erro ao criar funcionário:', error)\n    \n    if (error.code === 'P2002') {\n      if (error.meta?.target?.includes('cpf')) {\n        return { error: 'CPF já cadastrado nesta empresa' }\n      }\n      if (error.meta?.target?.includes('employeeNumber')) {\n        return { error: 'Matrícula já cadastrada nesta empresa' }\n      }\n    }\n    \n    return { error: 'Erro ao cadastrar funcionário' }\n  }\n}\n\nexport async function updateEmployee(id: string, data: EmployeeFormData) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  try {\n    const employee = await prisma.employee.findUnique({\n      where: { id },\n    })\n\n    if (!employee) {\n      return { error: 'Funcionário não encontrado' }\n    }\n\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, employee.companyId)\n\n    if (!isAdmin && role !== 'COMPANY_ADMIN') {\n      return { error: 'Sem permissão para editar funcionários' }\n    }\n\n    const updated = await prisma.employee.update({\n      where: { id },\n      data: {\n        fullName: data.fullName,\n        cpf: data.cpf.replace(/\\D/g, ''),\n        birthDate: new Date(data.birthDate),\n        gender: data.gender,\n        maritalStatus: data.maritalStatus,\n        nationality: data.nationality || 'Brasileira',\n        email: data.email,\n        phone: data.phone,\n        emergencyContactName: data.emergencyContactName,\n        emergencyContactPhone: data.emergencyContactPhone,\n        employeeNumber: data.employeeNumber,\n        admissionDate: new Date(data.admissionDate),\n        contractType: data.contractType,\n        workSchedule: data.workSchedule,\n        unit: data.unit,\n        department: data.department,\n        position: data.position,\n        cboCode: data.cboCode,\n        supervisor: data.supervisor,\n        status: data.status || 'ACTIVE',\n      },\n    })\n\n    revalidatePath('/dashboard/employees')\n    revalidatePath(`/dashboard/companies/${employee.companyId}`)\n    return { success: true, employee: updated }\n  } catch (error: any) {\n    console.error('Erro ao atualizar funcionário:', error)\n    \n    if (error.code === 'P2002') {\n      if (error.meta?.target?.includes('cpf')) {\n        return { error: 'CPF já cadastrado nesta empresa' }\n      }\n      if (error.meta?.target?.includes('employeeNumber')) {\n        return { error: 'Matrícula já cadastrada nesta empresa' }\n      }\n    }\n    \n    return { error: 'Erro ao atualizar funcionário' }\n  }\n}\n\nexport async function deleteEmployee(id: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  try {\n    const employee = await prisma.employee.findUnique({\n      where: { id },\n    })\n\n    if (!employee) {\n      return { error: 'Funcionário não encontrado' }\n    }\n\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, employee.companyId)\n\n    if (!isAdmin && role !== 'COMPANY_ADMIN') {\n      return { error: 'Sem permissão para excluir funcionários' }\n    }\n\n    await prisma.employee.delete({\n      where: { id },\n    })\n\n    revalidatePath('/dashboard/employees')\n    revalidatePath(`/dashboard/companies/${employee.companyId}`)\n    return { success: true }\n  } catch (error) {\n    console.error('Erro ao excluir funcionário:', error)\n    return { error: 'Erro ao excluir funcionário' }\n  }\n}\n\nexport async function getEmployees(companyId?: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado', employees: [] }\n  }\n\n  try {\n    const isAdmin = await isPlatformAdmin(user.id)\n\n    let employees\n\n    if (isAdmin && !companyId) {\n      employees = await prisma.employee.findMany({\n        include: {\n          company: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n        orderBy: {\n          fullName: 'asc',\n        },\n      })\n    } else if (companyId) {\n      const role = await getUserRole(user.id, companyId)\n      if (!isAdmin && !role) {\n        return { error: 'Sem permissão para visualizar funcionários', employees: [] }\n      }\n\n      employees = await prisma.employee.findMany({\n        where: {\n          companyId,\n        },\n        include: {\n          company: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n        orderBy: {\n          fullName: 'asc',\n        },\n      })\n    } else {\n      const memberships = await prisma.membership.findMany({\n        where: {\n          userId: user.id,\n          status: 'ACTIVE',\n        },\n        select: {\n          companyId: true,\n        },\n      })\n\n      const companyIds = memberships.map(m => m.companyId)\n\n      employees = await prisma.employee.findMany({\n        where: {\n          companyId: {\n            in: companyIds,\n          },\n        },\n        include: {\n          company: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n        orderBy: {\n          fullName: 'asc',\n        },\n      })\n    }\n\n    return { employees }\n  } catch (error) {\n    console.error('Erro ao buscar funcionários:', error)\n    return { error: 'Erro ao buscar funcionários', employees: [] }\n  }\n}\n\nexport async function getEmployeeById(id: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado', employee: null }\n  }\n\n  try {\n    const employee = await prisma.employee.findUnique({\n      where: { id },\n      include: {\n        company: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n      },\n    })\n\n    if (!employee) {\n      return { error: 'Funcionário não encontrado', employee: null }\n    }\n\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, employee.companyId)\n\n    if (!isAdmin && !role) {\n      return { error: 'Sem permissão para visualizar este funcionário', employee: null }\n    }\n\n    return { employee }\n  } catch (error) {\n    console.error('Erro ao buscar funcionário:', error)\n    return { error: 'Erro ao buscar funcionário', employee: null }\n  }\n}\n"],"names":[],"mappings":";;;;;;;IA6JsB,iBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1931, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/actions/employees.ts"],"sourcesContent":["'use server'\n\nimport { revalidatePath } from 'next/cache'\nimport { prisma } from '@/lib/prisma'\nimport { getCurrentUser, isPlatformAdmin, getUserRole } from '@/lib/auth'\nimport type { Gender, MaritalStatus, ContractType, MembershipStatus } from '@prisma/client'\n\nexport type EmployeeFormData = {\n  companyId: string\n  fullName: string\n  cpf: string\n  birthDate: string\n  gender?: Gender\n  maritalStatus?: MaritalStatus\n  nationality?: string\n  email: string\n  phone?: string\n  emergencyContactName?: string\n  emergencyContactPhone?: string\n  employeeNumber: string\n  admissionDate: string\n  contractType: ContractType\n  workSchedule?: string\n  unit?: string\n  department?: string\n  position: string\n  cboCode?: string\n  supervisor?: string\n  status?: MembershipStatus\n}\n\nexport async function createEmployee(data: EmployeeFormData) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  try {\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, data.companyId)\n\n    if (!isAdmin && role !== 'COMPANY_ADMIN') {\n      return { error: 'Sem permissão para cadastrar funcionários' }\n    }\n\n    const employee = await prisma.employee.create({\n      data: {\n        companyId: data.companyId,\n        fullName: data.fullName,\n        cpf: data.cpf.replace(/\\D/g, ''),\n        birthDate: new Date(data.birthDate),\n        gender: data.gender,\n        maritalStatus: data.maritalStatus,\n        nationality: data.nationality || 'Brasileira',\n        email: data.email,\n        phone: data.phone,\n        emergencyContactName: data.emergencyContactName,\n        emergencyContactPhone: data.emergencyContactPhone,\n        employeeNumber: data.employeeNumber,\n        admissionDate: new Date(data.admissionDate),\n        contractType: data.contractType,\n        workSchedule: data.workSchedule,\n        unit: data.unit,\n        department: data.department,\n        position: data.position,\n        cboCode: data.cboCode,\n        supervisor: data.supervisor,\n        status: data.status || 'ACTIVE',\n      },\n    })\n\n    revalidatePath('/dashboard/employees')\n    revalidatePath(`/dashboard/companies/${data.companyId}`)\n    return { success: true, employee }\n  } catch (error: any) {\n    console.error('Erro ao criar funcionário:', error)\n    \n    if (error.code === 'P2002') {\n      if (error.meta?.target?.includes('cpf')) {\n        return { error: 'CPF já cadastrado nesta empresa' }\n      }\n      if (error.meta?.target?.includes('employeeNumber')) {\n        return { error: 'Matrícula já cadastrada nesta empresa' }\n      }\n    }\n    \n    return { error: 'Erro ao cadastrar funcionário' }\n  }\n}\n\nexport async function updateEmployee(id: string, data: EmployeeFormData) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  try {\n    const employee = await prisma.employee.findUnique({\n      where: { id },\n    })\n\n    if (!employee) {\n      return { error: 'Funcionário não encontrado' }\n    }\n\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, employee.companyId)\n\n    if (!isAdmin && role !== 'COMPANY_ADMIN') {\n      return { error: 'Sem permissão para editar funcionários' }\n    }\n\n    const updated = await prisma.employee.update({\n      where: { id },\n      data: {\n        fullName: data.fullName,\n        cpf: data.cpf.replace(/\\D/g, ''),\n        birthDate: new Date(data.birthDate),\n        gender: data.gender,\n        maritalStatus: data.maritalStatus,\n        nationality: data.nationality || 'Brasileira',\n        email: data.email,\n        phone: data.phone,\n        emergencyContactName: data.emergencyContactName,\n        emergencyContactPhone: data.emergencyContactPhone,\n        employeeNumber: data.employeeNumber,\n        admissionDate: new Date(data.admissionDate),\n        contractType: data.contractType,\n        workSchedule: data.workSchedule,\n        unit: data.unit,\n        department: data.department,\n        position: data.position,\n        cboCode: data.cboCode,\n        supervisor: data.supervisor,\n        status: data.status || 'ACTIVE',\n      },\n    })\n\n    revalidatePath('/dashboard/employees')\n    revalidatePath(`/dashboard/companies/${employee.companyId}`)\n    return { success: true, employee: updated }\n  } catch (error: any) {\n    console.error('Erro ao atualizar funcionário:', error)\n    \n    if (error.code === 'P2002') {\n      if (error.meta?.target?.includes('cpf')) {\n        return { error: 'CPF já cadastrado nesta empresa' }\n      }\n      if (error.meta?.target?.includes('employeeNumber')) {\n        return { error: 'Matrícula já cadastrada nesta empresa' }\n      }\n    }\n    \n    return { error: 'Erro ao atualizar funcionário' }\n  }\n}\n\nexport async function deleteEmployee(id: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado' }\n  }\n\n  try {\n    const employee = await prisma.employee.findUnique({\n      where: { id },\n    })\n\n    if (!employee) {\n      return { error: 'Funcionário não encontrado' }\n    }\n\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, employee.companyId)\n\n    if (!isAdmin && role !== 'COMPANY_ADMIN') {\n      return { error: 'Sem permissão para excluir funcionários' }\n    }\n\n    await prisma.employee.delete({\n      where: { id },\n    })\n\n    revalidatePath('/dashboard/employees')\n    revalidatePath(`/dashboard/companies/${employee.companyId}`)\n    return { success: true }\n  } catch (error) {\n    console.error('Erro ao excluir funcionário:', error)\n    return { error: 'Erro ao excluir funcionário' }\n  }\n}\n\nexport async function getEmployees(companyId?: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado', employees: [] }\n  }\n\n  try {\n    const isAdmin = await isPlatformAdmin(user.id)\n\n    let employees\n\n    if (isAdmin && !companyId) {\n      employees = await prisma.employee.findMany({\n        include: {\n          company: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n        orderBy: {\n          fullName: 'asc',\n        },\n      })\n    } else if (companyId) {\n      const role = await getUserRole(user.id, companyId)\n      if (!isAdmin && !role) {\n        return { error: 'Sem permissão para visualizar funcionários', employees: [] }\n      }\n\n      employees = await prisma.employee.findMany({\n        where: {\n          companyId,\n        },\n        include: {\n          company: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n        orderBy: {\n          fullName: 'asc',\n        },\n      })\n    } else {\n      const memberships = await prisma.membership.findMany({\n        where: {\n          userId: user.id,\n          status: 'ACTIVE',\n        },\n        select: {\n          companyId: true,\n        },\n      })\n\n      const companyIds = memberships.map(m => m.companyId)\n\n      employees = await prisma.employee.findMany({\n        where: {\n          companyId: {\n            in: companyIds,\n          },\n        },\n        include: {\n          company: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n        },\n        orderBy: {\n          fullName: 'asc',\n        },\n      })\n    }\n\n    return { employees }\n  } catch (error) {\n    console.error('Erro ao buscar funcionários:', error)\n    return { error: 'Erro ao buscar funcionários', employees: [] }\n  }\n}\n\nexport async function getEmployeeById(id: string) {\n  const user = await getCurrentUser()\n  if (!user) {\n    return { error: 'Não autorizado', employee: null }\n  }\n\n  try {\n    const employee = await prisma.employee.findUnique({\n      where: { id },\n      include: {\n        company: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n      },\n    })\n\n    if (!employee) {\n      return { error: 'Funcionário não encontrado', employee: null }\n    }\n\n    const isAdmin = await isPlatformAdmin(user.id)\n    const role = await getUserRole(user.id, employee.companyId)\n\n    if (!isAdmin && !role) {\n      return { error: 'Sem permissão para visualizar este funcionário', employee: null }\n    }\n\n    return { employee }\n  } catch (error) {\n    console.error('Erro ao buscar funcionário:', error)\n    return { error: 'Erro ao buscar funcionário', employee: null }\n  }\n}\n"],"names":[],"mappings":";;;;;;;IA0FsB,iBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 1943, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/dashboard/edit-employee-dialog.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from '@/components/ui/dialog'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Loader2 } from 'lucide-react'\nimport { updateEmployee } from '@/app/actions/employees'\nimport { validateCPF, formatCPF, formatPhone } from '@/lib/utils/validators'\n\nexport function EditEmployeeDialog({ employee, open, onOpenChange }: any) {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [data, setData] = useState<any>({})\n\n  useEffect(() => {\n    if (employee && open) {\n      const formatDate = (date: string) => date?.split('T')[0] || ''\n      setData({\n        companyId: employee.company.id,\n        fullName: employee.fullName,\n        cpf: employee.cpf,\n        birthDate: formatDate(employee.birthDate),\n        gender: employee.gender,\n        maritalStatus: employee.maritalStatus,\n        nationality: employee.nationality || 'Brasileira',\n        email: employee.email,\n        phone: employee.phone || '',\n        emergencyContactName: employee.emergencyContactName || '',\n        emergencyContactPhone: employee.emergencyContactPhone || '',\n        employeeNumber: employee.employeeNumber,\n        admissionDate: formatDate(employee.admissionDate),\n        contractType: employee.contractType,\n        workSchedule: employee.workSchedule || '',\n        unit: employee.unit || '',\n        department: employee.department || '',\n        position: employee.position,\n        cboCode: employee.cboCode || '',\n        supervisor: employee.supervisor || '',\n        status: employee.status,\n      })\n    }\n  }, [employee, open])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError('')\n    setLoading(true)\n\n    // Validate required fields\n    if (!data.companyId || !data.fullName || !data.cpf || \n        !data.birthDate || !data.email || !data.employeeNumber ||\n        !data.admissionDate || !data.contractType || !data.position) {\n      setError('Preencha todos os campos obrigatórios')\n      setLoading(false)\n      return\n    }\n\n    // Validate CPF\n    if (!validateCPF(data.cpf)) {\n      setError('CPF inválido')\n      setLoading(false)\n      return\n    }\n\n    const result = await updateEmployee(employee.id, data)\n\n    if (result.error) {\n      setError(result.error)\n      setLoading(false)\n    } else {\n      onOpenChange(false)\n      setLoading(false)\n    }\n  }\n\n  const u = (field: string, value: any) => setData((prev: any) => ({ ...prev, [field]: value }))\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-3xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Editar Funcionário</DialogTitle>\n          <DialogDescription>Atualize as informações do colaborador</DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"space-y-6 py-4\">\n            {/* Company Display (readonly) */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"company\">Empresa *</Label>\n              <Input \n                id=\"company\" \n                value={employee?.company?.name || ''} \n                disabled \n                className=\"bg-muted\"\n              />\n              <p className=\"text-xs text-muted-foreground\">\n                A empresa não pode ser alterada após o cadastro\n              </p>\n            </div>\n\n            <div className=\"border-t pt-4\">\n              <h3 className=\"font-semibold mb-4\">Identificação Civil</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"col-span-2\"><Label>Nome Completo *</Label><Input value={data.fullName || ''} onChange={(e) => u('fullName', e.target.value)} /></div>\n                <div><Label>CPF *</Label><Input value={formatCPF(data.cpf || '')} onChange={(e) => u('cpf', e.target.value)} maxLength={14} /></div>\n                <div><Label>Data de Nascimento *</Label><Input type=\"date\" value={data.birthDate || ''} onChange={(e) => u('birthDate', e.target.value)} /></div>\n                <div><Label>Sexo</Label><Select value={data.gender} onValueChange={(v) => u('gender', v)}><SelectTrigger><SelectValue /></SelectTrigger><SelectContent><SelectItem value=\"MALE\">Masculino</SelectItem><SelectItem value=\"FEMALE\">Feminino</SelectItem><SelectItem value=\"OTHER\">Outro</SelectItem></SelectContent></Select></div>\n                <div><Label>Estado Civil</Label><Select value={data.maritalStatus} onValueChange={(v) => u('maritalStatus', v)}><SelectTrigger><SelectValue /></SelectTrigger><SelectContent><SelectItem value=\"SINGLE\">Solteiro(a)</SelectItem><SelectItem value=\"MARRIED\">Casado(a)</SelectItem><SelectItem value=\"DIVORCED\">Divorciado(a)</SelectItem><SelectItem value=\"WIDOWED\">Viúvo(a)</SelectItem></SelectContent></Select></div>\n                <div className=\"col-span-2\"><Label>Nacionalidade</Label><Input value={data.nationality || ''} onChange={(e) => u('nationality', e.target.value)} /></div>\n              </div>\n            </div>\n\n            <div className=\"border-t pt-4\">\n              <h3 className=\"font-semibold mb-4\">Contato</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div><Label>E-mail *</Label><Input type=\"email\" value={data.email || ''} onChange={(e) => u('email', e.target.value)} /></div>\n                <div><Label>Telefone</Label><Input value={formatPhone(data.phone || '')} onChange={(e) => u('phone', e.target.value)} /></div>\n                <div><Label>Contato de Emergência</Label><Input value={data.emergencyContactName || ''} onChange={(e) => u('emergencyContactName', e.target.value)} /></div>\n                <div><Label>Telefone de Emergência</Label><Input value={formatPhone(data.emergencyContactPhone || '')} onChange={(e) => u('emergencyContactPhone', e.target.value)} /></div>\n              </div>\n            </div>\n\n            <div className=\"border-t pt-4\">\n              <h3 className=\"font-semibold mb-4\">Vínculo Trabalhista</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div><Label>Matrícula *</Label><Input value={data.employeeNumber || ''} onChange={(e) => u('employeeNumber', e.target.value)} /></div>\n                <div><Label>Data de Admissão *</Label><Input type=\"date\" value={data.admissionDate || ''} onChange={(e) => u('admissionDate', e.target.value)} /></div>\n                <div><Label>Tipo de Contrato *</Label><Select value={data.contractType} onValueChange={(v) => u('contractType', v)}><SelectTrigger><SelectValue /></SelectTrigger><SelectContent><SelectItem value=\"CLT\">CLT</SelectItem><SelectItem value=\"INTERN\">Estágio</SelectItem><SelectItem value=\"OUTSOURCED\">Terceirizado</SelectItem><SelectItem value=\"TEMPORARY\">Temporário</SelectItem><SelectItem value=\"AUTONOMOUS\">Autônomo</SelectItem></SelectContent></Select></div>\n                <div><Label>Jornada/Turno</Label><Input value={data.workSchedule || ''} onChange={(e) => u('workSchedule', e.target.value)} /></div>\n                <div><Label>Unidade/Obra</Label><Input value={data.unit || ''} onChange={(e) => u('unit', e.target.value)} /></div>\n                <div><Label>Setor/Área</Label><Input value={data.department || ''} onChange={(e) => u('department', e.target.value)} /></div>\n                <div><Label>Cargo/Função *</Label><Input value={data.position || ''} onChange={(e) => u('position', e.target.value)} /></div>\n                <div><Label>Código CBO</Label><Input value={data.cboCode || ''} onChange={(e) => u('cboCode', e.target.value)} /></div>\n                <div className=\"col-span-2\"><Label>Superior Imediato</Label><Input value={data.supervisor || ''} onChange={(e) => u('supervisor', e.target.value)} /></div>\n              </div>\n            </div>\n          </div>\n\n          {error && <div className=\"text-sm text-destructive bg-destructive/10 p-3 rounded-md mb-4\">{error}</div>}\n\n          <DialogFooter>\n            <Button type=\"button\" variant=\"outline\" onClick={() => onOpenChange(false)} disabled={loading}>Cancelar</Button>\n            <Button type=\"submit\" disabled={loading}>{loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}Salvar</Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2855, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/components/dashboard/employees-list.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu'\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog'\nimport { MoreVertical, Pencil, Trash2, Mail, Phone, Building2, Briefcase } from 'lucide-react'\nimport { deleteEmployee } from '@/app/actions/employees'\nimport { formatCPF, formatPhone } from '@/lib/utils/validators'\nimport { EditEmployeeDialog } from './edit-employee-dialog'\n\ntype Employee = {\n  id: string\n  fullName: string\n  cpf: string\n  email: string\n  phone: string | null\n  position: string\n  department: string | null\n  contractType: string\n  status: string\n  company: {\n    id: string\n    name: string\n  }\n}\n\ninterface EmployeesListProps {\n  employees: Employee[]\n}\n\nexport function EmployeesList({ employees }: EmployeesListProps) {\n  const [deleteId, setDeleteId] = useState<string | null>(null)\n  const [editEmployee, setEditEmployee] = useState<Employee | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  const handleDelete = async () => {\n    if (!deleteId) return\n    setLoading(true)\n\n    const result = await deleteEmployee(deleteId)\n    \n    if (!result.error) {\n      setDeleteId(null)\n    }\n    setLoading(false)\n  }\n\n  const contractTypeLabels: Record<string, string> = {\n    CLT: 'CLT',\n    INTERN: 'Estágio',\n    OUTSOURCED: 'Terceirizado',\n    TEMPORARY: 'Temporário',\n    AUTONOMOUS: 'Autônomo',\n  }\n\n  const statusConfig: Record<string, { label: string; color: string }> = {\n    ACTIVE: { label: 'Ativo', color: 'bg-green-100 text-green-700' },\n    INVITED: { label: 'Convite Pendente', color: 'bg-yellow-100 text-yellow-700' },\n    INACTIVE: { label: 'Inativo', color: 'bg-gray-100 text-gray-700' },\n  }\n\n  if (employees.length === 0) {\n    return (\n      <Card className=\"p-8\">\n        <div className=\"text-center text-muted-foreground\">\n          <Briefcase className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n          <p>Nenhum funcionário cadastrado ainda.</p>\n          <p className=\"text-sm mt-2\">Clique em \"Cadastrar Funcionário\" para adicionar o primeiro.</p>\n        </div>\n      </Card>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"grid gap-4\">\n        {employees.map((employee) => (\n          <Card key={employee.id} className=\"p-4 hover:shadow-md transition-shadow\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex-1 space-y-2\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"h-10 w-10 rounded-full bg-teal-100 text-teal-700 flex items-center justify-center font-semibold\">\n                    {employee.fullName.split(' ').map(n => n[0]).join('').substring(0, 2).toUpperCase()}\n                  </div>\n                  <div>\n                    <div className=\"flex items-center gap-2\">\n                      <h3 className=\"font-semibold text-primary\">{employee.fullName}</h3>\n                      <Badge className={statusConfig[employee.status]?.color || 'bg-gray-100'}>\n                        {statusConfig[employee.status]?.label || employee.status}\n                      </Badge>\n                    </div>\n                    <div className=\"text-sm text-muted-foreground\">\n                      CPF: {formatCPF(employee.cpf)}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 text-sm\">\n                  <div className=\"flex items-center gap-2 text-muted-foreground\">\n                    <Mail className=\"h-3 w-3\" />\n                    {employee.email}\n                  </div>\n                  {employee.phone && (\n                    <div className=\"flex items-center gap-2 text-muted-foreground\">\n                      <Phone className=\"h-3 w-3\" />\n                      {formatPhone(employee.phone)}\n                    </div>\n                  )}\n                  <div className=\"flex items-center gap-2 text-muted-foreground\">\n                    <Building2 className=\"h-3 w-3\" />\n                    {employee.company.name}\n                  </div>\n                  <div className=\"flex items-center gap-2 text-muted-foreground\">\n                    <Briefcase className=\"h-3 w-3\" />\n                    {employee.position}\n                  </div>\n                </div>\n\n                <div className=\"flex gap-2 flex-wrap\">\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {contractTypeLabels[employee.contractType] || employee.contractType}\n                  </Badge>\n                  {employee.department && (\n                    <Badge variant=\"outline\" className=\"text-xs\">\n                      {employee.department}\n                    </Badge>\n                  )}\n                </div>\n              </div>\n\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"ghost\" size=\"icon\">\n                    <MoreVertical className=\"h-4 w-4\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                  <DropdownMenuItem onClick={() => setEditEmployee(employee)}>\n                    <Pencil className=\"h-4 w-4 mr-2\" />\n                    Editar\n                  </DropdownMenuItem>\n                  <DropdownMenuItem \n                    onClick={() => setDeleteId(employee.id)}\n                    className=\"text-destructive\"\n                  >\n                    <Trash2 className=\"h-4 w-4 mr-2\" />\n                    Excluir\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </div>\n          </Card>\n        ))}\n      </div>\n\n      {/* Delete Confirmation Dialog */}\n      <AlertDialog open={!!deleteId} onOpenChange={(open) => !open && setDeleteId(null)}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Confirmar Exclusão</AlertDialogTitle>\n            <AlertDialogDescription>\n              Tem certeza que deseja excluir este funcionário? Esta ação não pode ser desfeita.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel disabled={loading}>Cancelar</AlertDialogCancel>\n            <AlertDialogAction onClick={handleDelete} disabled={loading} className=\"bg-destructive hover:bg-destructive/90\">\n              {loading ? 'Excluindo...' : 'Excluir'}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Edit Dialog */}\n      {editEmployee && (\n        <EditEmployeeDialog\n          employee={editEmployee}\n          open={!!editEmployee}\n          onOpenChange={(open) => !open && setEditEmployee(null)}\n        />\n      )}\n    </>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}